{
  "version": 3,
  "sources": ["../node_modules/.pnpm/serialize-error@8.1.0/node_modules/serialize-error/index.js", "../node_modules/.pnpm/cuint@0.2.2/node_modules/cuint/lib/uint32.js", "../node_modules/.pnpm/cuint@0.2.2/node_modules/cuint/lib/uint64.js", "../node_modules/.pnpm/cuint@0.2.2/node_modules/cuint/index.js", "../node_modules/.pnpm/xxhashjs@0.2.2/node_modules/xxhashjs/lib/xxhash.js", "../node_modules/.pnpm/xxhashjs@0.2.2/node_modules/xxhashjs/lib/xxhash64.js", "../node_modules/.pnpm/xxhashjs@0.2.2/node_modules/xxhashjs/lib/index.js", "../node_modules/.pnpm/ansicolor@1.1.95/node_modules/ansicolor/ansicolor.js", "../src/index.ts", "../src/interfaces.ts", "../src/transports/base.ts", "../node_modules/.pnpm/ansicolor@1.1.95/node_modules/ansicolor/build/ansicolor.mjs", "../src/transports/console.ts", "../src/transports/undefined.ts"],
  "sourcesContent": ["'use strict';\n\nclass NonError extends Error {\n\tconstructor(message) {\n\t\tsuper(NonError._prepareSuperMessage(message));\n\t\tObject.defineProperty(this, 'name', {\n\t\t\tvalue: 'NonError',\n\t\t\tconfigurable: true,\n\t\t\twritable: true\n\t\t});\n\n\t\tif (Error.captureStackTrace) {\n\t\t\tError.captureStackTrace(this, NonError);\n\t\t}\n\t}\n\n\tstatic _prepareSuperMessage(message) {\n\t\ttry {\n\t\t\treturn JSON.stringify(message);\n\t\t} catch {\n\t\t\treturn String(message);\n\t\t}\n\t}\n}\n\nconst commonProperties = [\n\t{property: 'name', enumerable: false},\n\t{property: 'message', enumerable: false},\n\t{property: 'stack', enumerable: false},\n\t{property: 'code', enumerable: true}\n];\n\nconst isCalled = Symbol('.toJSON called');\n\nconst toJSON = from => {\n\tfrom[isCalled] = true;\n\tconst json = from.toJSON();\n\tdelete from[isCalled];\n\treturn json;\n};\n\nconst destroyCircular = ({\n\tfrom,\n\tseen,\n\tto_,\n\tforceEnumerable,\n\tmaxDepth,\n\tdepth\n}) => {\n\tconst to = to_ || (Array.isArray(from) ? [] : {});\n\n\tseen.push(from);\n\n\tif (depth >= maxDepth) {\n\t\treturn to;\n\t}\n\n\tif (typeof from.toJSON === 'function' && from[isCalled] !== true) {\n\t\treturn toJSON(from);\n\t}\n\n\tfor (const [key, value] of Object.entries(from)) {\n\t\tif (typeof Buffer === 'function' && Buffer.isBuffer(value)) {\n\t\t\tto[key] = '[object Buffer]';\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (typeof value === 'function') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!value || typeof value !== 'object') {\n\t\t\tto[key] = value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!seen.includes(from[key])) {\n\t\t\tdepth++;\n\n\t\t\tto[key] = destroyCircular({\n\t\t\t\tfrom: from[key],\n\t\t\t\tseen: seen.slice(),\n\t\t\t\tforceEnumerable,\n\t\t\t\tmaxDepth,\n\t\t\t\tdepth\n\t\t\t});\n\t\t\tcontinue;\n\t\t}\n\n\t\tto[key] = '[Circular]';\n\t}\n\n\tfor (const {property, enumerable} of commonProperties) {\n\t\tif (typeof from[property] === 'string') {\n\t\t\tObject.defineProperty(to, property, {\n\t\t\t\tvalue: from[property],\n\t\t\t\tenumerable: forceEnumerable ? true : enumerable,\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true\n\t\t\t});\n\t\t}\n\t}\n\n\treturn to;\n};\n\nconst serializeError = (value, options = {}) => {\n\tconst {maxDepth = Number.POSITIVE_INFINITY} = options;\n\n\tif (typeof value === 'object' && value !== null) {\n\t\treturn destroyCircular({\n\t\t\tfrom: value,\n\t\t\tseen: [],\n\t\t\tforceEnumerable: true,\n\t\t\tmaxDepth,\n\t\t\tdepth: 0\n\t\t});\n\t}\n\n\t// People sometimes throw things besides Error objects\u2026\n\tif (typeof value === 'function') {\n\t\t// `JSON.stringify()` discards functions. We do too, unless a function is thrown directly.\n\t\treturn `[Function: ${(value.name || 'anonymous')}]`;\n\t}\n\n\treturn value;\n};\n\nconst deserializeError = (value, options = {}) => {\n\tconst {maxDepth = Number.POSITIVE_INFINITY} = options;\n\n\tif (value instanceof Error) {\n\t\treturn value;\n\t}\n\n\tif (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n\t\tconst newError = new Error(); // eslint-disable-line unicorn/error-message\n\t\tdestroyCircular({\n\t\t\tfrom: value,\n\t\t\tseen: [],\n\t\t\tto_: newError,\n\t\t\tmaxDepth,\n\t\t\tdepth: 0\n\t\t});\n\t\treturn newError;\n\t}\n\n\treturn new NonError(value);\n};\n\nmodule.exports = {\n\tserializeError,\n\tdeserializeError\n};\n", "/**\n\tC-like unsigned 32 bits integers in Javascript\n\tCopyright (C) 2013, Pierre Curto\n\tMIT license\n */\n;(function (root) {\n\n\t// Local cache for typical radices\n\tvar radixPowerCache = {\n\t\t36: UINT32( Math.pow(36, 5) )\n\t,\t16: UINT32( Math.pow(16, 7) )\n\t,\t10: UINT32( Math.pow(10, 9) )\n\t,\t2:  UINT32( Math.pow(2, 30) )\n\t}\n\tvar radixCache = {\n\t\t36: UINT32(36)\n\t,\t16: UINT32(16)\n\t,\t10: UINT32(10)\n\t,\t2:  UINT32(2)\n\t}\n\n\t/**\n\t *\tRepresents an unsigned 32 bits integer\n\t * @constructor\n\t * @param {Number|String|Number} low bits     | integer as a string \t\t | integer as a number\n\t * @param {Number|Number|Undefined} high bits | radix (optional, default=10)\n\t * @return \n\t */\n\tfunction UINT32 (l, h) {\n\t\tif ( !(this instanceof UINT32) )\n\t\t\treturn new UINT32(l, h)\n\n\t\tthis._low = 0\n\t\tthis._high = 0\n\t\tthis.remainder = null\n\t\tif (typeof h == 'undefined')\n\t\t\treturn fromNumber.call(this, l)\n\n\t\tif (typeof l == 'string')\n\t\t\treturn fromString.call(this, l, h)\n\n\t\tfromBits.call(this, l, h)\n\t}\n\n\t/**\n\t * Set the current _UINT32_ object with its low and high bits\n\t * @method fromBits\n\t * @param {Number} low bits\n\t * @param {Number} high bits\n\t * @return ThisExpression\n\t */\n\tfunction fromBits (l, h) {\n\t\tthis._low = l | 0\n\t\tthis._high = h | 0\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromBits = fromBits\n\n\t/**\n\t * Set the current _UINT32_ object from a number\n\t * @method fromNumber\n\t * @param {Number} number\n\t * @return ThisExpression\n\t */\n\tfunction fromNumber (value) {\n\t\tthis._low = value & 0xFFFF\n\t\tthis._high = value >>> 16\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromNumber = fromNumber\n\n\t/**\n\t * Set the current _UINT32_ object from a string\n\t * @method fromString\n\t * @param {String} integer as a string\n\t * @param {Number} radix (optional, default=10)\n\t * @return ThisExpression\n\t */\n\tfunction fromString (s, radix) {\n\t\tvar value = parseInt(s, radix || 10)\n\n\t\tthis._low = value & 0xFFFF\n\t\tthis._high = value >>> 16\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromString = fromString\n\n\t/**\n\t * Convert this _UINT32_ to a number\n\t * @method toNumber\n\t * @return {Number} the converted UINT32\n\t */\n\tUINT32.prototype.toNumber = function () {\n\t\treturn (this._high * 65536) + this._low\n\t}\n\n\t/**\n\t * Convert this _UINT32_ to a string\n\t * @method toString\n\t * @param {Number} radix (optional, default=10)\n\t * @return {String} the converted UINT32\n\t */\n\tUINT32.prototype.toString = function (radix) {\n\t\treturn this.toNumber().toString(radix || 10)\n\t}\n\n\t/**\n\t * Add two _UINT32_. The current _UINT32_ stores the result\n\t * @method add\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.add = function (other) {\n\t\tvar a00 = this._low + other._low\n\t\tvar a16 = a00 >>> 16\n\n\t\ta16 += this._high + other._high\n\n\t\tthis._low = a00 & 0xFFFF\n\t\tthis._high = a16 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Subtract two _UINT32_. The current _UINT32_ stores the result\n\t * @method subtract\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.subtract = function (other) {\n\t\t//TODO inline\n\t\treturn this.add( other.clone().negate() )\n\t}\n\n\t/**\n\t * Multiply two _UINT32_. The current _UINT32_ stores the result\n\t * @method multiply\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.multiply = function (other) {\n\t\t/*\n\t\t\ta = a00 + a16\n\t\t\tb = b00 + b16\n\t\t\ta*b = (a00 + a16)(b00 + b16)\n\t\t\t\t= a00b00 + a00b16 + a16b00 + a16b16\n\n\t\t\ta16b16 overflows the 32bits\n\t\t */\n\t\tvar a16 = this._high\n\t\tvar a00 = this._low\n\t\tvar b16 = other._high\n\t\tvar b00 = other._low\n\n/* Removed to increase speed under normal circumstances (i.e. not multiplying by 0 or 1)\n\t\t// this == 0 or other == 1: nothing to do\n\t\tif ((a00 == 0 && a16 == 0) || (b00 == 1 && b16 == 0)) return this\n\n\t\t// other == 0 or this == 1: this = other\n\t\tif ((b00 == 0 && b16 == 0) || (a00 == 1 && a16 == 0)) {\n\t\t\tthis._low = other._low\n\t\t\tthis._high = other._high\n\t\t\treturn this\n\t\t}\n*/\n\n\t\tvar c16, c00\n\t\tc00 = a00 * b00\n\t\tc16 = c00 >>> 16\n\n\t\tc16 += a16 * b00\n\t\tc16 &= 0xFFFF\t\t// Not required but improves performance\n\t\tc16 += a00 * b16\n\n\t\tthis._low = c00 & 0xFFFF\n\t\tthis._high = c16 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Divide two _UINT32_. The current _UINT32_ stores the result.\n\t * The remainder is made available as the _remainder_ property on\n\t * the _UINT32_ object. It can be null, meaning there are no remainder.\n\t * @method div\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.div = function (other) {\n\t\tif ( (other._low == 0) && (other._high == 0) ) throw Error('division by zero')\n\n\t\t// other == 1\n\t\tif (other._high == 0 && other._low == 1) {\n\t\t\tthis.remainder = new UINT32(0)\n\t\t\treturn this\n\t\t}\n\n\t\t// other > this: 0\n\t\tif ( other.gt(this) ) {\n\t\t\tthis.remainder = this.clone()\n\t\t\tthis._low = 0\n\t\t\tthis._high = 0\n\t\t\treturn this\n\t\t}\n\t\t// other == this: 1\n\t\tif ( this.eq(other) ) {\n\t\t\tthis.remainder = new UINT32(0)\n\t\t\tthis._low = 1\n\t\t\tthis._high = 0\n\t\t\treturn this\n\t\t}\n\n\t\t// Shift the divisor left until it is higher than the dividend\n\t\tvar _other = other.clone()\n\t\tvar i = -1\n\t\twhile ( !this.lt(_other) ) {\n\t\t\t// High bit can overflow the default 16bits\n\t\t\t// Its ok since we right shift after this loop\n\t\t\t// The overflown bit must be kept though\n\t\t\t_other.shiftLeft(1, true)\n\t\t\ti++\n\t\t}\n\n\t\t// Set the remainder\n\t\tthis.remainder = this.clone()\n\t\t// Initialize the current result to 0\n\t\tthis._low = 0\n\t\tthis._high = 0\n\t\tfor (; i >= 0; i--) {\n\t\t\t_other.shiftRight(1)\n\t\t\t// If shifted divisor is smaller than the dividend\n\t\t\t// then subtract it from the dividend\n\t\t\tif ( !this.remainder.lt(_other) ) {\n\t\t\t\tthis.remainder.subtract(_other)\n\t\t\t\t// Update the current result\n\t\t\t\tif (i >= 16) {\n\t\t\t\t\tthis._high |= 1 << (i - 16)\n\t\t\t\t} else {\n\t\t\t\t\tthis._low |= 1 << i\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Negate the current _UINT32_\n\t * @method negate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.negate = function () {\n\t\tvar v = ( ~this._low & 0xFFFF ) + 1\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = (~this._high + (v >>> 16)) & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Equals\n\t * @method eq\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.equals = UINT32.prototype.eq = function (other) {\n\t\treturn (this._low == other._low) && (this._high == other._high)\n\t}\n\n\t/**\n\t * Greater than (strict)\n\t * @method gt\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.greaterThan = UINT32.prototype.gt = function (other) {\n\t\tif (this._high > other._high) return true\n\t\tif (this._high < other._high) return false\n\t\treturn this._low > other._low\n\t}\n\n\t/**\n\t * Less than (strict)\n\t * @method lt\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.lessThan = UINT32.prototype.lt = function (other) {\n\t\tif (this._high < other._high) return true\n\t\tif (this._high > other._high) return false\n\t\treturn this._low < other._low\n\t}\n\n\t/**\n\t * Bitwise OR\n\t * @method or\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.or = function (other) {\n\t\tthis._low |= other._low\n\t\tthis._high |= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise AND\n\t * @method and\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.and = function (other) {\n\t\tthis._low &= other._low\n\t\tthis._high &= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise NOT\n\t * @method not\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.not = function() {\n\t\tthis._low = ~this._low & 0xFFFF\n\t\tthis._high = ~this._high & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise XOR\n\t * @method xor\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.xor = function (other) {\n\t\tthis._low ^= other._low\n\t\tthis._high ^= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift right\n\t * @method shiftRight\n\t * @param {Number} number of bits to shift\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.shiftRight = UINT32.prototype.shiftr = function (n) {\n\t\tif (n > 16) {\n\t\t\tthis._low = this._high >> (n - 16)\n\t\t\tthis._high = 0\n\t\t} else if (n == 16) {\n\t\t\tthis._low = this._high\n\t\t\tthis._high = 0\n\t\t} else {\n\t\t\tthis._low = (this._low >> n) | ( (this._high << (16-n)) & 0xFFFF )\n\t\t\tthis._high >>= n\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift left\n\t * @method shiftLeft\n\t * @param {Number} number of bits to shift\n\t * @param {Boolean} allow overflow\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.shiftLeft = UINT32.prototype.shiftl = function (n, allowOverflow) {\n\t\tif (n > 16) {\n\t\t\tthis._high = this._low << (n - 16)\n\t\t\tthis._low = 0\n\t\t\tif (!allowOverflow) {\n\t\t\t\tthis._high &= 0xFFFF\n\t\t\t}\n\t\t} else if (n == 16) {\n\t\t\tthis._high = this._low\n\t\t\tthis._low = 0\n\t\t} else {\n\t\t\tthis._high = (this._high << n) | (this._low >> (16-n))\n\t\t\tthis._low = (this._low << n) & 0xFFFF\n\t\t\tif (!allowOverflow) {\n\t\t\t\t// Overflow only allowed on the high bits...\n\t\t\t\tthis._high &= 0xFFFF\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate left\n\t * @method rotl\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.rotateLeft = UINT32.prototype.rotl = function (n) {\n\t\tvar v = (this._high << 16) | this._low\n\t\tv = (v << n) | (v >>> (32 - n))\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = v >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate right\n\t * @method rotr\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.rotateRight = UINT32.prototype.rotr = function (n) {\n\t\tvar v = (this._high << 16) | this._low\n\t\tv = (v >>> n) | (v << (32 - n))\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = v >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Clone the current _UINT32_\n\t * @method clone\n\t * @return {Object} cloned UINT32\n\t */\n\tUINT32.prototype.clone = function () {\n\t\treturn new UINT32(this._low, this._high)\n\t}\n\n\tif (typeof define != 'undefined' && define.amd) {\n\t\t// AMD / RequireJS\n\t\tdefine([], function () {\n\t\t\treturn UINT32\n\t\t})\n\t} else if (typeof module != 'undefined' && module.exports) {\n\t\t// Node.js\n\t\tmodule.exports = UINT32\n\t} else {\n\t\t// Browser\n\t\troot['UINT32'] = UINT32\n\t}\n\n})(this)\n", "/**\n\tC-like unsigned 64 bits integers in Javascript\n\tCopyright (C) 2013, Pierre Curto\n\tMIT license\n */\n;(function (root) {\n\n\t// Local cache for typical radices\n\tvar radixPowerCache = {\n\t\t16: UINT64( Math.pow(16, 5) )\n\t,\t10: UINT64( Math.pow(10, 5) )\n\t,\t2:  UINT64( Math.pow(2, 5) )\n\t}\n\tvar radixCache = {\n\t\t16: UINT64(16)\n\t,\t10: UINT64(10)\n\t,\t2:  UINT64(2)\n\t}\n\n\t/**\n\t *\tRepresents an unsigned 64 bits integer\n\t * @constructor\n\t * @param {Number} first low bits (8)\n\t * @param {Number} second low bits (8)\n\t * @param {Number} first high bits (8)\n\t * @param {Number} second high bits (8)\n\t * or\n\t * @param {Number} low bits (32)\n\t * @param {Number} high bits (32)\n\t * or\n\t * @param {String|Number} integer as a string \t\t | integer as a number\n\t * @param {Number|Undefined} radix (optional, default=10)\n\t * @return \n\t */\n\tfunction UINT64 (a00, a16, a32, a48) {\n\t\tif ( !(this instanceof UINT64) )\n\t\t\treturn new UINT64(a00, a16, a32, a48)\n\n\t\tthis.remainder = null\n\t\tif (typeof a00 == 'string')\n\t\t\treturn fromString.call(this, a00, a16)\n\n\t\tif (typeof a16 == 'undefined')\n\t\t\treturn fromNumber.call(this, a00)\n\n\t\tfromBits.apply(this, arguments)\n\t}\n\n\t/**\n\t * Set the current _UINT64_ object with its low and high bits\n\t * @method fromBits\n\t * @param {Number} first low bits (8)\n\t * @param {Number} second low bits (8)\n\t * @param {Number} first high bits (8)\n\t * @param {Number} second high bits (8)\n\t * or\n\t * @param {Number} low bits (32)\n\t * @param {Number} high bits (32)\n\t * @return ThisExpression\n\t */\n\tfunction fromBits (a00, a16, a32, a48) {\n\t\tif (typeof a32 == 'undefined') {\n\t\t\tthis._a00 = a00 & 0xFFFF\n\t\t\tthis._a16 = a00 >>> 16\n\t\t\tthis._a32 = a16 & 0xFFFF\n\t\t\tthis._a48 = a16 >>> 16\n\t\t\treturn this\n\t\t}\n\n\t\tthis._a00 = a00 | 0\n\t\tthis._a16 = a16 | 0\n\t\tthis._a32 = a32 | 0\n\t\tthis._a48 = a48 | 0\n\n\t\treturn this\n\t}\n\tUINT64.prototype.fromBits = fromBits\n\n\t/**\n\t * Set the current _UINT64_ object from a number\n\t * @method fromNumber\n\t * @param {Number} number\n\t * @return ThisExpression\n\t */\n\tfunction fromNumber (value) {\n\t\tthis._a00 = value & 0xFFFF\n\t\tthis._a16 = value >>> 16\n\t\tthis._a32 = 0\n\t\tthis._a48 = 0\n\n\t\treturn this\n\t}\n\tUINT64.prototype.fromNumber = fromNumber\n\n\t/**\n\t * Set the current _UINT64_ object from a string\n\t * @method fromString\n\t * @param {String} integer as a string\n\t * @param {Number} radix (optional, default=10)\n\t * @return ThisExpression\n\t */\n\tfunction fromString (s, radix) {\n\t\tradix = radix || 10\n\n\t\tthis._a00 = 0\n\t\tthis._a16 = 0\n\t\tthis._a32 = 0\n\t\tthis._a48 = 0\n\n\t\t/*\n\t\t\tIn Javascript, bitwise operators only operate on the first 32 bits \n\t\t\tof a number, even though parseInt() encodes numbers with a 53 bits \n\t\t\tmantissa.\n\t\t\tTherefore UINT64(<Number>) can only work on 32 bits.\n\t\t\tThe radix maximum value is 36 (as per ECMA specs) (26 letters + 10 digits)\n\t\t\tmaximum input value is m = 32bits as 1 = 2^32 - 1\n\t\t\tSo the maximum substring length n is:\n\t\t\t36^(n+1) - 1 = 2^32 - 1\n\t\t\t36^(n+1) = 2^32\n\t\t\t(n+1)ln(36) = 32ln(2)\n\t\t\tn = 32ln(2)/ln(36) - 1\n\t\t\tn = 5.189644915687692\n\t\t\tn = 5\n\t\t */\n\t\tvar radixUint = radixPowerCache[radix] || new UINT64( Math.pow(radix, 5) )\n\n\t\tfor (var i = 0, len = s.length; i < len; i += 5) {\n\t\t\tvar size = Math.min(5, len - i)\n\t\t\tvar value = parseInt( s.slice(i, i + size), radix )\n\t\t\tthis.multiply(\n\t\t\t\t\tsize < 5\n\t\t\t\t\t\t? new UINT64( Math.pow(radix, size) )\n\t\t\t\t\t\t: radixUint\n\t\t\t\t)\n\t\t\t\t.add( new UINT64(value) )\n\t\t}\n\n\t\treturn this\n\t}\n\tUINT64.prototype.fromString = fromString\n\n\t/**\n\t * Convert this _UINT64_ to a number (last 32 bits are dropped)\n\t * @method toNumber\n\t * @return {Number} the converted UINT64\n\t */\n\tUINT64.prototype.toNumber = function () {\n\t\treturn (this._a16 * 65536) + this._a00\n\t}\n\n\t/**\n\t * Convert this _UINT64_ to a string\n\t * @method toString\n\t * @param {Number} radix (optional, default=10)\n\t * @return {String} the converted UINT64\n\t */\n\tUINT64.prototype.toString = function (radix) {\n\t\tradix = radix || 10\n\t\tvar radixUint = radixCache[radix] || new UINT64(radix)\n\n\t\tif ( !this.gt(radixUint) ) return this.toNumber().toString(radix)\n\n\t\tvar self = this.clone()\n\t\tvar res = new Array(64)\n\t\tfor (var i = 63; i >= 0; i--) {\n\t\t\tself.div(radixUint)\n\t\t\tres[i] = self.remainder.toNumber().toString(radix)\n\t\t\tif ( !self.gt(radixUint) ) break\n\t\t}\n\t\tres[i-1] = self.toNumber().toString(radix)\n\n\t\treturn res.join('')\n\t}\n\n\t/**\n\t * Add two _UINT64_. The current _UINT64_ stores the result\n\t * @method add\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.add = function (other) {\n\t\tvar a00 = this._a00 + other._a00\n\n\t\tvar a16 = a00 >>> 16\n\t\ta16 += this._a16 + other._a16\n\n\t\tvar a32 = a16 >>> 16\n\t\ta32 += this._a32 + other._a32\n\n\t\tvar a48 = a32 >>> 16\n\t\ta48 += this._a48 + other._a48\n\n\t\tthis._a00 = a00 & 0xFFFF\n\t\tthis._a16 = a16 & 0xFFFF\n\t\tthis._a32 = a32 & 0xFFFF\n\t\tthis._a48 = a48 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Subtract two _UINT64_. The current _UINT64_ stores the result\n\t * @method subtract\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.subtract = function (other) {\n\t\treturn this.add( other.clone().negate() )\n\t}\n\n\t/**\n\t * Multiply two _UINT64_. The current _UINT64_ stores the result\n\t * @method multiply\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.multiply = function (other) {\n\t\t/*\n\t\t\ta = a00 + a16 + a32 + a48\n\t\t\tb = b00 + b16 + b32 + b48\n\t\t\ta*b = (a00 + a16 + a32 + a48)(b00 + b16 + b32 + b48)\n\t\t\t\t= a00b00 + a00b16 + a00b32 + a00b48\n\t\t\t\t+ a16b00 + a16b16 + a16b32 + a16b48\n\t\t\t\t+ a32b00 + a32b16 + a32b32 + a32b48\n\t\t\t\t+ a48b00 + a48b16 + a48b32 + a48b48\n\n\t\t\ta16b48, a32b32, a48b16, a48b32 and a48b48 overflow the 64 bits\n\t\t\tso it comes down to:\n\t\t\ta*b\t= a00b00 + a00b16 + a00b32 + a00b48\n\t\t\t\t+ a16b00 + a16b16 + a16b32\n\t\t\t\t+ a32b00 + a32b16\n\t\t\t\t+ a48b00\n\t\t\t\t= a00b00\n\t\t\t\t+ a00b16 + a16b00\n\t\t\t\t+ a00b32 + a16b16 + a32b00\n\t\t\t\t+ a00b48 + a16b32 + a32b16 + a48b00\n\t\t */\n\t\tvar a00 = this._a00\n\t\tvar a16 = this._a16\n\t\tvar a32 = this._a32\n\t\tvar a48 = this._a48\n\t\tvar b00 = other._a00\n\t\tvar b16 = other._a16\n\t\tvar b32 = other._a32\n\t\tvar b48 = other._a48\n\n\t\tvar c00 = a00 * b00\n\n\t\tvar c16 = c00 >>> 16\n\t\tc16 += a00 * b16\n\t\tvar c32 = c16 >>> 16\n\t\tc16 &= 0xFFFF\n\t\tc16 += a16 * b00\n\n\t\tc32 += c16 >>> 16\n\t\tc32 += a00 * b32\n\t\tvar c48 = c32 >>> 16\n\t\tc32 &= 0xFFFF\n\t\tc32 += a16 * b16\n\t\tc48 += c32 >>> 16\n\t\tc32 &= 0xFFFF\n\t\tc32 += a32 * b00\n\n\t\tc48 += c32 >>> 16\n\t\tc48 += a00 * b48\n\t\tc48 &= 0xFFFF\n\t\tc48 += a16 * b32\n\t\tc48 &= 0xFFFF\n\t\tc48 += a32 * b16\n\t\tc48 &= 0xFFFF\n\t\tc48 += a48 * b00\n\n\t\tthis._a00 = c00 & 0xFFFF\n\t\tthis._a16 = c16 & 0xFFFF\n\t\tthis._a32 = c32 & 0xFFFF\n\t\tthis._a48 = c48 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Divide two _UINT64_. The current _UINT64_ stores the result.\n\t * The remainder is made available as the _remainder_ property on\n\t * the _UINT64_ object. It can be null, meaning there are no remainder.\n\t * @method div\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.div = function (other) {\n\t\tif ( (other._a16 == 0) && (other._a32 == 0) && (other._a48 == 0) ) {\n\t\t\tif (other._a00 == 0) throw Error('division by zero')\n\n\t\t\t// other == 1: this\n\t\t\tif (other._a00 == 1) {\n\t\t\t\tthis.remainder = new UINT64(0)\n\t\t\t\treturn this\n\t\t\t}\n\t\t}\n\n\t\t// other > this: 0\n\t\tif ( other.gt(this) ) {\n\t\t\tthis.remainder = this.clone()\n\t\t\tthis._a00 = 0\n\t\t\tthis._a16 = 0\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t\treturn this\n\t\t}\n\t\t// other == this: 1\n\t\tif ( this.eq(other) ) {\n\t\t\tthis.remainder = new UINT64(0)\n\t\t\tthis._a00 = 1\n\t\t\tthis._a16 = 0\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t\treturn this\n\t\t}\n\n\t\t// Shift the divisor left until it is higher than the dividend\n\t\tvar _other = other.clone()\n\t\tvar i = -1\n\t\twhile ( !this.lt(_other) ) {\n\t\t\t// High bit can overflow the default 16bits\n\t\t\t// Its ok since we right shift after this loop\n\t\t\t// The overflown bit must be kept though\n\t\t\t_other.shiftLeft(1, true)\n\t\t\ti++\n\t\t}\n\n\t\t// Set the remainder\n\t\tthis.remainder = this.clone()\n\t\t// Initialize the current result to 0\n\t\tthis._a00 = 0\n\t\tthis._a16 = 0\n\t\tthis._a32 = 0\n\t\tthis._a48 = 0\n\t\tfor (; i >= 0; i--) {\n\t\t\t_other.shiftRight(1)\n\t\t\t// If shifted divisor is smaller than the dividend\n\t\t\t// then subtract it from the dividend\n\t\t\tif ( !this.remainder.lt(_other) ) {\n\t\t\t\tthis.remainder.subtract(_other)\n\t\t\t\t// Update the current result\n\t\t\t\tif (i >= 48) {\n\t\t\t\t\tthis._a48 |= 1 << (i - 48)\n\t\t\t\t} else if (i >= 32) {\n\t\t\t\t\tthis._a32 |= 1 << (i - 32)\n\t\t\t\t} else if (i >= 16) {\n\t\t\t\t\tthis._a16 |= 1 << (i - 16)\n\t\t\t\t} else {\n\t\t\t\t\tthis._a00 |= 1 << i\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Negate the current _UINT64_\n\t * @method negate\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.negate = function () {\n\t\tvar v = ( ~this._a00 & 0xFFFF ) + 1\n\t\tthis._a00 = v & 0xFFFF\n\t\tv = (~this._a16 & 0xFFFF) + (v >>> 16)\n\t\tthis._a16 = v & 0xFFFF\n\t\tv = (~this._a32 & 0xFFFF) + (v >>> 16)\n\t\tthis._a32 = v & 0xFFFF\n\t\tthis._a48 = (~this._a48 + (v >>> 16)) & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\n\t * @method eq\n\t * @param {Object} other UINT64\n\t * @return {Boolean}\n\t */\n\tUINT64.prototype.equals = UINT64.prototype.eq = function (other) {\n\t\treturn (this._a48 == other._a48) && (this._a00 == other._a00)\n\t\t\t && (this._a32 == other._a32) && (this._a16 == other._a16)\n\t}\n\n\t/**\n\t * Greater than (strict)\n\t * @method gt\n\t * @param {Object} other UINT64\n\t * @return {Boolean}\n\t */\n\tUINT64.prototype.greaterThan = UINT64.prototype.gt = function (other) {\n\t\tif (this._a48 > other._a48) return true\n\t\tif (this._a48 < other._a48) return false\n\t\tif (this._a32 > other._a32) return true\n\t\tif (this._a32 < other._a32) return false\n\t\tif (this._a16 > other._a16) return true\n\t\tif (this._a16 < other._a16) return false\n\t\treturn this._a00 > other._a00\n\t}\n\n\t/**\n\t * Less than (strict)\n\t * @method lt\n\t * @param {Object} other UINT64\n\t * @return {Boolean}\n\t */\n\tUINT64.prototype.lessThan = UINT64.prototype.lt = function (other) {\n\t\tif (this._a48 < other._a48) return true\n\t\tif (this._a48 > other._a48) return false\n\t\tif (this._a32 < other._a32) return true\n\t\tif (this._a32 > other._a32) return false\n\t\tif (this._a16 < other._a16) return true\n\t\tif (this._a16 > other._a16) return false\n\t\treturn this._a00 < other._a00\n\t}\n\n\t/**\n\t * Bitwise OR\n\t * @method or\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.or = function (other) {\n\t\tthis._a00 |= other._a00\n\t\tthis._a16 |= other._a16\n\t\tthis._a32 |= other._a32\n\t\tthis._a48 |= other._a48\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise AND\n\t * @method and\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.and = function (other) {\n\t\tthis._a00 &= other._a00\n\t\tthis._a16 &= other._a16\n\t\tthis._a32 &= other._a32\n\t\tthis._a48 &= other._a48\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise XOR\n\t * @method xor\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.xor = function (other) {\n\t\tthis._a00 ^= other._a00\n\t\tthis._a16 ^= other._a16\n\t\tthis._a32 ^= other._a32\n\t\tthis._a48 ^= other._a48\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise NOT\n\t * @method not\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.not = function() {\n\t\tthis._a00 = ~this._a00 & 0xFFFF\n\t\tthis._a16 = ~this._a16 & 0xFFFF\n\t\tthis._a32 = ~this._a32 & 0xFFFF\n\t\tthis._a48 = ~this._a48 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift right\n\t * @method shiftRight\n\t * @param {Number} number of bits to shift\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.shiftRight = UINT64.prototype.shiftr = function (n) {\n\t\tn %= 64\n\t\tif (n >= 48) {\n\t\t\tthis._a00 = this._a48 >> (n - 48)\n\t\t\tthis._a16 = 0\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t} else if (n >= 32) {\n\t\t\tn -= 32\n\t\t\tthis._a00 = ( (this._a32 >> n) | (this._a48 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = (this._a48 >> n) & 0xFFFF\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t} else if (n >= 16) {\n\t\t\tn -= 16\n\t\t\tthis._a00 = ( (this._a16 >> n) | (this._a32 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = ( (this._a32 >> n) | (this._a48 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a32 = (this._a48 >> n) & 0xFFFF\n\t\t\tthis._a48 = 0\n\t\t} else {\n\t\t\tthis._a00 = ( (this._a00 >> n) | (this._a16 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = ( (this._a16 >> n) | (this._a32 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a32 = ( (this._a32 >> n) | (this._a48 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a48 = (this._a48 >> n) & 0xFFFF\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift left\n\t * @method shiftLeft\n\t * @param {Number} number of bits to shift\n\t * @param {Boolean} allow overflow\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.shiftLeft = UINT64.prototype.shiftl = function (n, allowOverflow) {\n\t\tn %= 64\n\t\tif (n >= 48) {\n\t\t\tthis._a48 = this._a00 << (n - 48)\n\t\t\tthis._a32 = 0\n\t\t\tthis._a16 = 0\n\t\t\tthis._a00 = 0\n\t\t} else if (n >= 32) {\n\t\t\tn -= 32\n\t\t\tthis._a48 = (this._a16 << n) | (this._a00 >> (16-n))\n\t\t\tthis._a32 = (this._a00 << n) & 0xFFFF\n\t\t\tthis._a16 = 0\n\t\t\tthis._a00 = 0\n\t\t} else if (n >= 16) {\n\t\t\tn -= 16\n\t\t\tthis._a48 = (this._a32 << n) | (this._a16 >> (16-n))\n\t\t\tthis._a32 = ( (this._a16 << n) | (this._a00 >> (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = (this._a00 << n) & 0xFFFF\n\t\t\tthis._a00 = 0\n\t\t} else {\n\t\t\tthis._a48 = (this._a48 << n) | (this._a32 >> (16-n))\n\t\t\tthis._a32 = ( (this._a32 << n) | (this._a16 >> (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = ( (this._a16 << n) | (this._a00 >> (16-n)) ) & 0xFFFF\n\t\t\tthis._a00 = (this._a00 << n) & 0xFFFF\n\t\t}\n\t\tif (!allowOverflow) {\n\t\t\tthis._a48 &= 0xFFFF\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate left\n\t * @method rotl\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.rotateLeft = UINT64.prototype.rotl = function (n) {\n\t\tn %= 64\n\t\tif (n == 0) return this\n\t\tif (n >= 32) {\n\t\t\t// A.B.C.D\n\t\t\t// B.C.D.A rotl(16)\n\t\t\t// C.D.A.B rotl(32)\n\t\t\tvar v = this._a00\n\t\t\tthis._a00 = this._a32\n\t\t\tthis._a32 = v\n\t\t\tv = this._a48\n\t\t\tthis._a48 = this._a16\n\t\t\tthis._a16 = v\n\t\t\tif (n == 32) return this\n\t\t\tn -= 32\n\t\t}\n\n\t\tvar high = (this._a48 << 16) | this._a32\n\t\tvar low = (this._a16 << 16) | this._a00\n\n\t\tvar _high = (high << n) | (low >>> (32 - n))\n\t\tvar _low = (low << n) | (high >>> (32 - n))\n\n\t\tthis._a00 = _low & 0xFFFF\n\t\tthis._a16 = _low >>> 16\n\t\tthis._a32 = _high & 0xFFFF\n\t\tthis._a48 = _high >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate right\n\t * @method rotr\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.rotateRight = UINT64.prototype.rotr = function (n) {\n\t\tn %= 64\n\t\tif (n == 0) return this\n\t\tif (n >= 32) {\n\t\t\t// A.B.C.D\n\t\t\t// D.A.B.C rotr(16)\n\t\t\t// C.D.A.B rotr(32)\n\t\t\tvar v = this._a00\n\t\t\tthis._a00 = this._a32\n\t\t\tthis._a32 = v\n\t\t\tv = this._a48\n\t\t\tthis._a48 = this._a16\n\t\t\tthis._a16 = v\n\t\t\tif (n == 32) return this\n\t\t\tn -= 32\n\t\t}\n\n\t\tvar high = (this._a48 << 16) | this._a32\n\t\tvar low = (this._a16 << 16) | this._a00\n\n\t\tvar _high = (high >>> n) | (low << (32 - n))\n\t\tvar _low = (low >>> n) | (high << (32 - n))\n\n\t\tthis._a00 = _low & 0xFFFF\n\t\tthis._a16 = _low >>> 16\n\t\tthis._a32 = _high & 0xFFFF\n\t\tthis._a48 = _high >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Clone the current _UINT64_\n\t * @method clone\n\t * @return {Object} cloned UINT64\n\t */\n\tUINT64.prototype.clone = function () {\n\t\treturn new UINT64(this._a00, this._a16, this._a32, this._a48)\n\t}\n\n\tif (typeof define != 'undefined' && define.amd) {\n\t\t// AMD / RequireJS\n\t\tdefine([], function () {\n\t\t\treturn UINT64\n\t\t})\n\t} else if (typeof module != 'undefined' && module.exports) {\n\t\t// Node.js\n\t\tmodule.exports = UINT64\n\t} else {\n\t\t// Browser\n\t\troot['UINT64'] = UINT64\n\t}\n\n})(this)\n", "exports.UINT32 = require('./lib/uint32')\nexports.UINT64 = require('./lib/uint64')", "/**\nxxHash implementation in pure Javascript\n\nCopyright (C) 2013, Pierre Curto\nMIT license\n*/\nvar UINT32 = require('cuint').UINT32\n\n/*\n\tMerged this sequence of method calls as it speeds up\n\tthe calculations by a factor of 2\n */\n// this.v1.add( other.multiply(PRIME32_2) ).rotl(13).multiply(PRIME32_1);\nUINT32.prototype.xxh_update = function (low, high) {\n\tvar b00 = PRIME32_2._low\n\tvar b16 = PRIME32_2._high\n\n\tvar c16, c00\n\tc00 = low * b00\n\tc16 = c00 >>> 16\n\n\tc16 += high * b00\n\tc16 &= 0xFFFF\t\t// Not required but improves performance\n\tc16 += low * b16\n\n\tvar a00 = this._low + (c00 & 0xFFFF)\n\tvar a16 = a00 >>> 16\n\n\ta16 += this._high + (c16 & 0xFFFF)\n\n\tvar v = (a16 << 16) | (a00 & 0xFFFF)\n\tv = (v << 13) | (v >>> 19)\n\n\ta00 = v & 0xFFFF\n\ta16 = v >>> 16\n\n\tb00 = PRIME32_1._low\n\tb16 = PRIME32_1._high\n\n\tc00 = a00 * b00\n\tc16 = c00 >>> 16\n\n\tc16 += a16 * b00\n\tc16 &= 0xFFFF\t\t// Not required but improves performance\n\tc16 += a00 * b16\n\n\tthis._low = c00 & 0xFFFF\n\tthis._high = c16 & 0xFFFF\n}\n\n/*\n * Constants\n */\nvar PRIME32_1 = UINT32( '2654435761' )\nvar PRIME32_2 = UINT32( '2246822519' )\nvar PRIME32_3 = UINT32( '3266489917' )\nvar PRIME32_4 = UINT32(  '668265263' )\nvar PRIME32_5 = UINT32(  '374761393' )\n\n/**\n* Convert string to proper UTF-8 array\n* @param str Input string\n* @returns {Uint8Array} UTF8 array is returned as uint8 array\n*/\nfunction toUTF8Array (str) {\n\tvar utf8 = []\n\tfor (var i=0, n=str.length; i < n; i++) {\n\t\tvar charcode = str.charCodeAt(i)\n\t\tif (charcode < 0x80) utf8.push(charcode)\n\t\telse if (charcode < 0x800) {\n\t\t\tutf8.push(0xc0 | (charcode >> 6),\n\t\t\t0x80 | (charcode & 0x3f))\n\t\t}\n\t\telse if (charcode < 0xd800 || charcode >= 0xe000) {\n\t\t\tutf8.push(0xe0 | (charcode >> 12),\n\t\t\t0x80 | ((charcode>>6) & 0x3f),\n\t\t\t0x80 | (charcode & 0x3f))\n\t\t}\n\t\t// surrogate pair\n\t\telse {\n\t\t\ti++;\n\t\t\t// UTF-16 encodes 0x10000-0x10FFFF by\n\t\t\t// subtracting 0x10000 and splitting the\n\t\t\t// 20 bits of 0x0-0xFFFFF into two halves\n\t\t\tcharcode = 0x10000 + (((charcode & 0x3ff)<<10)\n\t\t\t| (str.charCodeAt(i) & 0x3ff))\n\t\t\tutf8.push(0xf0 | (charcode >>18),\n\t\t\t0x80 | ((charcode>>12) & 0x3f),\n\t\t\t0x80 | ((charcode>>6) & 0x3f),\n\t\t\t0x80 | (charcode & 0x3f))\n\t\t}\n\t}\n\n\treturn new Uint8Array(utf8)\n}\n\n/**\n * XXH object used as a constructor or a function\n * @constructor\n * or\n * @param {Object|String} input data\n * @param {Number|UINT32} seed\n * @return ThisExpression\n * or\n * @return {UINT32} xxHash\n */\nfunction XXH () {\n\tif (arguments.length == 2)\n\t\treturn new XXH( arguments[1] ).update( arguments[0] ).digest()\n\n\tif (!(this instanceof XXH))\n\t\treturn new XXH( arguments[0] )\n\n\tinit.call(this, arguments[0])\n}\n\n/**\n * Initialize the XXH instance with the given seed\n * @method init\n * @param {Number|Object} seed as a number or an unsigned 32 bits integer\n * @return ThisExpression\n */\n function init (seed) {\n\tthis.seed = seed instanceof UINT32 ? seed.clone() : UINT32(seed)\n\tthis.v1 = this.seed.clone().add(PRIME32_1).add(PRIME32_2)\n\tthis.v2 = this.seed.clone().add(PRIME32_2)\n\tthis.v3 = this.seed.clone()\n\tthis.v4 = this.seed.clone().subtract(PRIME32_1)\n\tthis.total_len = 0\n\tthis.memsize = 0\n\tthis.memory = null\n\n\treturn this\n}\nXXH.prototype.init = init\n\n/**\n * Add data to be computed for the XXH hash\n * @method update\n * @param {String|Buffer|ArrayBuffer} input as a string or nodejs Buffer or ArrayBuffer\n * @return ThisExpression\n */\nXXH.prototype.update = function (input) {\n\tvar isString = typeof input == 'string'\n\tvar isArrayBuffer\n\n\t// Convert all strings to utf-8 first (issue #5)\n\tif (isString) {\n\t\tinput = toUTF8Array(input)\n\t\tisString = false\n\t\tisArrayBuffer = true\n\t}\n\n\tif (typeof ArrayBuffer !== \"undefined\" && input instanceof ArrayBuffer)\n\t{\n\t\tisArrayBuffer = true\n\t\tinput = new Uint8Array(input);\n\t}\n\n\tvar p = 0\n\tvar len = input.length\n\tvar bEnd = p + len\n\n\tif (len == 0) return this\n\n\tthis.total_len += len\n\n\tif (this.memsize == 0)\n\t{\n\t\tif (isString) {\n\t\t\tthis.memory = ''\n\t\t} else if (isArrayBuffer) {\n\t\t\tthis.memory = new Uint8Array(16)\n\t\t} else {\n\t\t\tthis.memory = new Buffer(16)\n\t\t}\n\t}\n\n\tif (this.memsize + len < 16)   // fill in tmp buffer\n\t{\n\t\t// XXH_memcpy(this.memory + this.memsize, input, len)\n\t\tif (isString) {\n\t\t\tthis.memory += input\n\t\t} else if (isArrayBuffer) {\n\t\t\tthis.memory.set( input.subarray(0, len), this.memsize )\n\t\t} else {\n\t\t\tinput.copy( this.memory, this.memsize, 0, len )\n\t\t}\n\n\t\tthis.memsize += len\n\t\treturn this\n\t}\n\n\tif (this.memsize > 0)   // some data left from previous update\n\t{\n\t\t// XXH_memcpy(this.memory + this.memsize, input, 16-this.memsize);\n\t\tif (isString) {\n\t\t\tthis.memory += input.slice(0, 16 - this.memsize)\n\t\t} else if (isArrayBuffer) {\n\t\t\tthis.memory.set( input.subarray(0, 16 - this.memsize), this.memsize )\n\t\t} else {\n\t\t\tinput.copy( this.memory, this.memsize, 0, 16 - this.memsize )\n\t\t}\n\n\t\tvar p32 = 0\n\t\tif (isString) {\n\t\t\tthis.v1.xxh_update(\n\t\t\t\t(this.memory.charCodeAt(p32+1) << 8) | this.memory.charCodeAt(p32)\n\t\t\t,\t(this.memory.charCodeAt(p32+3) << 8) | this.memory.charCodeAt(p32+2)\n\t\t\t)\n\t\t\tp32 += 4\n\t\t\tthis.v2.xxh_update(\n\t\t\t\t(this.memory.charCodeAt(p32+1) << 8) | this.memory.charCodeAt(p32)\n\t\t\t,\t(this.memory.charCodeAt(p32+3) << 8) | this.memory.charCodeAt(p32+2)\n\t\t\t)\n\t\t\tp32 += 4\n\t\t\tthis.v3.xxh_update(\n\t\t\t\t(this.memory.charCodeAt(p32+1) << 8) | this.memory.charCodeAt(p32)\n\t\t\t,\t(this.memory.charCodeAt(p32+3) << 8) | this.memory.charCodeAt(p32+2)\n\t\t\t)\n\t\t\tp32 += 4\n\t\t\tthis.v4.xxh_update(\n\t\t\t\t(this.memory.charCodeAt(p32+1) << 8) | this.memory.charCodeAt(p32)\n\t\t\t,\t(this.memory.charCodeAt(p32+3) << 8) | this.memory.charCodeAt(p32+2)\n\t\t\t)\n\t\t} else {\n\t\t\tthis.v1.xxh_update(\n\t\t\t\t(this.memory[p32+1] << 8) | this.memory[p32]\n\t\t\t,\t(this.memory[p32+3] << 8) | this.memory[p32+2]\n\t\t\t)\n\t\t\tp32 += 4\n\t\t\tthis.v2.xxh_update(\n\t\t\t\t(this.memory[p32+1] << 8) | this.memory[p32]\n\t\t\t,\t(this.memory[p32+3] << 8) | this.memory[p32+2]\n\t\t\t)\n\t\t\tp32 += 4\n\t\t\tthis.v3.xxh_update(\n\t\t\t\t(this.memory[p32+1] << 8) | this.memory[p32]\n\t\t\t,\t(this.memory[p32+3] << 8) | this.memory[p32+2]\n\t\t\t)\n\t\t\tp32 += 4\n\t\t\tthis.v4.xxh_update(\n\t\t\t\t(this.memory[p32+1] << 8) | this.memory[p32]\n\t\t\t,\t(this.memory[p32+3] << 8) | this.memory[p32+2]\n\t\t\t)\n\t\t}\n\n\t\tp += 16 - this.memsize\n\t\tthis.memsize = 0\n\t\tif (isString) this.memory = ''\n\t}\n\n\tif (p <= bEnd - 16)\n\t{\n\t\tvar limit = bEnd - 16\n\n\t\tdo\n\t\t{\n\t\t\tif (isString) {\n\t\t\t\tthis.v1.xxh_update(\n\t\t\t\t\t(input.charCodeAt(p+1) << 8) | input.charCodeAt(p)\n\t\t\t\t,\t(input.charCodeAt(p+3) << 8) | input.charCodeAt(p+2)\n\t\t\t\t)\n\t\t\t\tp += 4\n\t\t\t\tthis.v2.xxh_update(\n\t\t\t\t\t(input.charCodeAt(p+1) << 8) | input.charCodeAt(p)\n\t\t\t\t,\t(input.charCodeAt(p+3) << 8) | input.charCodeAt(p+2)\n\t\t\t\t)\n\t\t\t\tp += 4\n\t\t\t\tthis.v3.xxh_update(\n\t\t\t\t\t(input.charCodeAt(p+1) << 8) | input.charCodeAt(p)\n\t\t\t\t,\t(input.charCodeAt(p+3) << 8) | input.charCodeAt(p+2)\n\t\t\t\t)\n\t\t\t\tp += 4\n\t\t\t\tthis.v4.xxh_update(\n\t\t\t\t\t(input.charCodeAt(p+1) << 8) | input.charCodeAt(p)\n\t\t\t\t,\t(input.charCodeAt(p+3) << 8) | input.charCodeAt(p+2)\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tthis.v1.xxh_update(\n\t\t\t\t\t(input[p+1] << 8) | input[p]\n\t\t\t\t,\t(input[p+3] << 8) | input[p+2]\n\t\t\t\t)\n\t\t\t\tp += 4\n\t\t\t\tthis.v2.xxh_update(\n\t\t\t\t\t(input[p+1] << 8) | input[p]\n\t\t\t\t,\t(input[p+3] << 8) | input[p+2]\n\t\t\t\t)\n\t\t\t\tp += 4\n\t\t\t\tthis.v3.xxh_update(\n\t\t\t\t\t(input[p+1] << 8) | input[p]\n\t\t\t\t,\t(input[p+3] << 8) | input[p+2]\n\t\t\t\t)\n\t\t\t\tp += 4\n\t\t\t\tthis.v4.xxh_update(\n\t\t\t\t\t(input[p+1] << 8) | input[p]\n\t\t\t\t,\t(input[p+3] << 8) | input[p+2]\n\t\t\t\t)\n\t\t\t}\n\t\t\tp += 4\n\t\t} while (p <= limit)\n\t}\n\n\tif (p < bEnd)\n\t{\n\t\t// XXH_memcpy(this.memory, p, bEnd-p);\n\t\tif (isString) {\n\t\t\tthis.memory += input.slice(p)\n\t\t} else if (isArrayBuffer) {\n\t\t\tthis.memory.set( input.subarray(p, bEnd), this.memsize )\n\t\t} else {\n\t\t\tinput.copy( this.memory, this.memsize, p, bEnd )\n\t\t}\n\n\t\tthis.memsize = bEnd - p\n\t}\n\n\treturn this\n}\n\n/**\n * Finalize the XXH computation. The XXH instance is ready for reuse for the given seed\n * @method digest\n * @return {UINT32} xxHash\n */\nXXH.prototype.digest = function () {\n\tvar input = this.memory\n\tvar isString = typeof input == 'string'\n\tvar p = 0\n\tvar bEnd = this.memsize\n\tvar h32, h\n\tvar u = new UINT32\n\n\tif (this.total_len >= 16)\n\t{\n\t\th32 = this.v1.rotl(1).add( this.v2.rotl(7).add( this.v3.rotl(12).add( this.v4.rotl(18) ) ) )\n\t}\n\telse\n\t{\n\t\th32  = this.seed.clone().add( PRIME32_5 )\n\t}\n\n\th32.add( u.fromNumber(this.total_len) )\n\n\twhile (p <= bEnd - 4)\n\t{\n\t\tif (isString) {\n\t\t\tu.fromBits(\n\t\t\t\t(input.charCodeAt(p+1) << 8) | input.charCodeAt(p)\n\t\t\t,\t(input.charCodeAt(p+3) << 8) | input.charCodeAt(p+2)\n\t\t\t)\n\t\t} else {\n\t\t\tu.fromBits(\n\t\t\t\t(input[p+1] << 8) | input[p]\n\t\t\t,\t(input[p+3] << 8) | input[p+2]\n\t\t\t)\n\t\t}\n\t\th32\n\t\t\t.add( u.multiply(PRIME32_3) )\n\t\t\t.rotl(17)\n\t\t\t.multiply( PRIME32_4 )\n\t\tp += 4\n\t}\n\n\twhile (p < bEnd)\n\t{\n\t\tu.fromBits( isString ? input.charCodeAt(p++) : input[p++], 0 )\n\t\th32\n\t\t\t.add( u.multiply(PRIME32_5) )\n\t\t\t.rotl(11)\n\t\t\t.multiply(PRIME32_1)\n\t}\n\n\th = h32.clone().shiftRight(15)\n\th32.xor(h).multiply(PRIME32_2)\n\n\th = h32.clone().shiftRight(13)\n\th32.xor(h).multiply(PRIME32_3)\n\n\th = h32.clone().shiftRight(16)\n\th32.xor(h)\n\n\t// Reset the state\n\tthis.init( this.seed )\n\n\treturn h32\n}\n\nmodule.exports = XXH\n", "/**\nxxHash64 implementation in pure Javascript\n\nCopyright (C) 2016, Pierre Curto\nMIT license\n*/\nvar UINT64 = require('cuint').UINT64\n\n/*\n * Constants\n */\nvar PRIME64_1 = UINT64( '11400714785074694791' )\nvar PRIME64_2 = UINT64( '14029467366897019727' )\nvar PRIME64_3 = UINT64(  '1609587929392839161' )\nvar PRIME64_4 = UINT64(  '9650029242287828579' )\nvar PRIME64_5 = UINT64(  '2870177450012600261' )\n\n/**\n* Convert string to proper UTF-8 array\n* @param str Input string\n* @returns {Uint8Array} UTF8 array is returned as uint8 array\n*/\nfunction toUTF8Array (str) {\n\tvar utf8 = []\n\tfor (var i=0, n=str.length; i < n; i++) {\n\t\tvar charcode = str.charCodeAt(i)\n\t\tif (charcode < 0x80) utf8.push(charcode)\n\t\telse if (charcode < 0x800) {\n\t\t\tutf8.push(0xc0 | (charcode >> 6),\n\t\t\t0x80 | (charcode & 0x3f))\n\t\t}\n\t\telse if (charcode < 0xd800 || charcode >= 0xe000) {\n\t\t\tutf8.push(0xe0 | (charcode >> 12),\n\t\t\t0x80 | ((charcode>>6) & 0x3f),\n\t\t\t0x80 | (charcode & 0x3f))\n\t\t}\n\t\t// surrogate pair\n\t\telse {\n\t\t\ti++;\n\t\t\t// UTF-16 encodes 0x10000-0x10FFFF by\n\t\t\t// subtracting 0x10000 and splitting the\n\t\t\t// 20 bits of 0x0-0xFFFFF into two halves\n\t\t\tcharcode = 0x10000 + (((charcode & 0x3ff)<<10)\n\t\t\t| (str.charCodeAt(i) & 0x3ff))\n\t\t\tutf8.push(0xf0 | (charcode >>18),\n\t\t\t0x80 | ((charcode>>12) & 0x3f),\n\t\t\t0x80 | ((charcode>>6) & 0x3f),\n\t\t\t0x80 | (charcode & 0x3f))\n\t\t}\n\t}\n\n\treturn new Uint8Array(utf8)\n}\n\n/**\n * XXH64 object used as a constructor or a function\n * @constructor\n * or\n * @param {Object|String} input data\n * @param {Number|UINT64} seed\n * @return ThisExpression\n * or\n * @return {UINT64} xxHash\n */\nfunction XXH64 () {\n\tif (arguments.length == 2)\n\t\treturn new XXH64( arguments[1] ).update( arguments[0] ).digest()\n\n\tif (!(this instanceof XXH64))\n\t\treturn new XXH64( arguments[0] )\n\n\tinit.call(this, arguments[0])\n}\n\n/**\n * Initialize the XXH64 instance with the given seed\n * @method init\n * @param {Number|Object} seed as a number or an unsigned 32 bits integer\n * @return ThisExpression\n */\n function init (seed) {\n\tthis.seed = seed instanceof UINT64 ? seed.clone() : UINT64(seed)\n\tthis.v1 = this.seed.clone().add(PRIME64_1).add(PRIME64_2)\n\tthis.v2 = this.seed.clone().add(PRIME64_2)\n\tthis.v3 = this.seed.clone()\n\tthis.v4 = this.seed.clone().subtract(PRIME64_1)\n\tthis.total_len = 0\n\tthis.memsize = 0\n\tthis.memory = null\n\n\treturn this\n}\nXXH64.prototype.init = init\n\n/**\n * Add data to be computed for the XXH64 hash\n * @method update\n * @param {String|Buffer|ArrayBuffer} input as a string or nodejs Buffer or ArrayBuffer\n * @return ThisExpression\n */\nXXH64.prototype.update = function (input) {\n\tvar isString = typeof input == 'string'\n\tvar isArrayBuffer\n\n\t// Convert all strings to utf-8 first (issue #5)\n\tif (isString) {\n\t\tinput = toUTF8Array(input)\n\t\tisString = false\n\t\tisArrayBuffer = true\n\t}\n\n\tif (typeof ArrayBuffer !== \"undefined\" && input instanceof ArrayBuffer)\n\t{\n\t\tisArrayBuffer = true\n\t\tinput = new Uint8Array(input);\n\t}\n\n\tvar p = 0\n\tvar len = input.length\n\tvar bEnd = p + len\n\n\tif (len == 0) return this\n\n\tthis.total_len += len\n\n\tif (this.memsize == 0)\n\t{\n\t\tif (isString) {\n\t\t\tthis.memory = ''\n\t\t} else if (isArrayBuffer) {\n\t\t\tthis.memory = new Uint8Array(32)\n\t\t} else {\n\t\t\tthis.memory = new Buffer(32)\n\t\t}\n\t}\n\n\tif (this.memsize + len < 32)   // fill in tmp buffer\n\t{\n\t\t// XXH64_memcpy(this.memory + this.memsize, input, len)\n\t\tif (isString) {\n\t\t\tthis.memory += input\n\t\t} else if (isArrayBuffer) {\n\t\t\tthis.memory.set( input.subarray(0, len), this.memsize )\n\t\t} else {\n\t\t\tinput.copy( this.memory, this.memsize, 0, len )\n\t\t}\n\n\t\tthis.memsize += len\n\t\treturn this\n\t}\n\n\tif (this.memsize > 0)   // some data left from previous update\n\t{\n\t\t// XXH64_memcpy(this.memory + this.memsize, input, 16-this.memsize);\n\t\tif (isString) {\n\t\t\tthis.memory += input.slice(0, 32 - this.memsize)\n\t\t} else if (isArrayBuffer) {\n\t\t\tthis.memory.set( input.subarray(0, 32 - this.memsize), this.memsize )\n\t\t} else {\n\t\t\tinput.copy( this.memory, this.memsize, 0, 32 - this.memsize )\n\t\t}\n\n\t\tvar p64 = 0\n\t\tif (isString) {\n\t\t\tvar other\n\t\t\tother = UINT64(\n\t\t\t\t\t(this.memory.charCodeAt(p64+1) << 8) | this.memory.charCodeAt(p64)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+3) << 8) | this.memory.charCodeAt(p64+2)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+5) << 8) | this.memory.charCodeAt(p64+4)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+7) << 8) | this.memory.charCodeAt(p64+6)\n\t\t\t\t)\n\t\t\tthis.v1.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\tp64 += 8\n\t\t\tother = UINT64(\n\t\t\t\t\t(this.memory.charCodeAt(p64+1) << 8) | this.memory.charCodeAt(p64)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+3) << 8) | this.memory.charCodeAt(p64+2)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+5) << 8) | this.memory.charCodeAt(p64+4)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+7) << 8) | this.memory.charCodeAt(p64+6)\n\t\t\t\t)\n\t\t\tthis.v2.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\tp64 += 8\n\t\t\tother = UINT64(\n\t\t\t\t\t(this.memory.charCodeAt(p64+1) << 8) | this.memory.charCodeAt(p64)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+3) << 8) | this.memory.charCodeAt(p64+2)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+5) << 8) | this.memory.charCodeAt(p64+4)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+7) << 8) | this.memory.charCodeAt(p64+6)\n\t\t\t\t)\n\t\t\tthis.v3.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\tp64 += 8\n\t\t\tother = UINT64(\n\t\t\t\t\t(this.memory.charCodeAt(p64+1) << 8) | this.memory.charCodeAt(p64)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+3) << 8) | this.memory.charCodeAt(p64+2)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+5) << 8) | this.memory.charCodeAt(p64+4)\n\t\t\t\t,\t(this.memory.charCodeAt(p64+7) << 8) | this.memory.charCodeAt(p64+6)\n\t\t\t\t)\n\t\t\tthis.v4.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t} else {\n\t\t\tvar other\n\t\t\tother = UINT64(\n\t\t\t\t\t(this.memory[p64+1] << 8) | this.memory[p64]\n\t\t\t\t,\t(this.memory[p64+3] << 8) | this.memory[p64+2]\n\t\t\t\t,\t(this.memory[p64+5] << 8) | this.memory[p64+4]\n\t\t\t\t,\t(this.memory[p64+7] << 8) | this.memory[p64+6]\n\t\t\t\t)\n\t\t\tthis.v1.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\tp64 += 8\n\t\t\tother = UINT64(\n\t\t\t\t\t(this.memory[p64+1] << 8) | this.memory[p64]\n\t\t\t\t,\t(this.memory[p64+3] << 8) | this.memory[p64+2]\n\t\t\t\t,\t(this.memory[p64+5] << 8) | this.memory[p64+4]\n\t\t\t\t,\t(this.memory[p64+7] << 8) | this.memory[p64+6]\n\t\t\t\t)\n\t\t\tthis.v2.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\tp64 += 8\n\t\t\tother = UINT64(\n\t\t\t\t\t(this.memory[p64+1] << 8) | this.memory[p64]\n\t\t\t\t,\t(this.memory[p64+3] << 8) | this.memory[p64+2]\n\t\t\t\t,\t(this.memory[p64+5] << 8) | this.memory[p64+4]\n\t\t\t\t,\t(this.memory[p64+7] << 8) | this.memory[p64+6]\n\t\t\t\t)\n\t\t\tthis.v3.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\tp64 += 8\n\t\t\tother = UINT64(\n\t\t\t\t\t(this.memory[p64+1] << 8) | this.memory[p64]\n\t\t\t\t,\t(this.memory[p64+3] << 8) | this.memory[p64+2]\n\t\t\t\t,\t(this.memory[p64+5] << 8) | this.memory[p64+4]\n\t\t\t\t,\t(this.memory[p64+7] << 8) | this.memory[p64+6]\n\t\t\t\t)\n\t\t\tthis.v4.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t}\n\n\t\tp += 32 - this.memsize\n\t\tthis.memsize = 0\n\t\tif (isString) this.memory = ''\n\t}\n\n\tif (p <= bEnd - 32)\n\t{\n\t\tvar limit = bEnd - 32\n\n\t\tdo\n\t\t{\n\t\t\tif (isString) {\n\t\t\t\tvar other\n\t\t\t\tother = UINT64(\n\t\t\t\t\t\t(input.charCodeAt(p+1) << 8) | input.charCodeAt(p)\n\t\t\t\t\t,\t(input.charCodeAt(p+3) << 8) | input.charCodeAt(p+2)\n\t\t\t\t\t,\t(input.charCodeAt(p+5) << 8) | input.charCodeAt(p+4)\n\t\t\t\t\t,\t(input.charCodeAt(p+7) << 8) | input.charCodeAt(p+6)\n\t\t\t\t\t)\n\t\t\t\tthis.v1.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\t\tp += 8\n\t\t\t\tother = UINT64(\n\t\t\t\t\t\t(input.charCodeAt(p+1) << 8) | input.charCodeAt(p)\n\t\t\t\t\t,\t(input.charCodeAt(p+3) << 8) | input.charCodeAt(p+2)\n\t\t\t\t\t,\t(input.charCodeAt(p+5) << 8) | input.charCodeAt(p+4)\n\t\t\t\t\t,\t(input.charCodeAt(p+7) << 8) | input.charCodeAt(p+6)\n\t\t\t\t\t)\n\t\t\t\tthis.v2.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\t\tp += 8\n\t\t\t\tother = UINT64(\n\t\t\t\t\t\t(input.charCodeAt(p+1) << 8) | input.charCodeAt(p)\n\t\t\t\t\t,\t(input.charCodeAt(p+3) << 8) | input.charCodeAt(p+2)\n\t\t\t\t\t,\t(input.charCodeAt(p+5) << 8) | input.charCodeAt(p+4)\n\t\t\t\t\t,\t(input.charCodeAt(p+7) << 8) | input.charCodeAt(p+6)\n\t\t\t\t\t)\n\t\t\t\tthis.v3.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\t\tp += 8\n\t\t\t\tother = UINT64(\n\t\t\t\t\t\t(input.charCodeAt(p+1) << 8) | input.charCodeAt(p)\n\t\t\t\t\t,\t(input.charCodeAt(p+3) << 8) | input.charCodeAt(p+2)\n\t\t\t\t\t,\t(input.charCodeAt(p+5) << 8) | input.charCodeAt(p+4)\n\t\t\t\t\t,\t(input.charCodeAt(p+7) << 8) | input.charCodeAt(p+6)\n\t\t\t\t\t)\n\t\t\t\tthis.v4.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\t} else {\n\t\t\t\tvar other\n\t\t\t\tother = UINT64(\n\t\t\t\t\t\t(input[p+1] << 8) | input[p]\n\t\t\t\t\t,\t(input[p+3] << 8) | input[p+2]\n\t\t\t\t\t,\t(input[p+5] << 8) | input[p+4]\n\t\t\t\t\t,\t(input[p+7] << 8) | input[p+6]\n\t\t\t\t\t)\n\t\t\t\tthis.v1.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\t\tp += 8\n\t\t\t\tother = UINT64(\n\t\t\t\t\t\t(input[p+1] << 8) | input[p]\n\t\t\t\t\t,\t(input[p+3] << 8) | input[p+2]\n\t\t\t\t\t,\t(input[p+5] << 8) | input[p+4]\n\t\t\t\t\t,\t(input[p+7] << 8) | input[p+6]\n\t\t\t\t\t)\n\t\t\t\tthis.v2.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\t\tp += 8\n\t\t\t\tother = UINT64(\n\t\t\t\t\t\t(input[p+1] << 8) | input[p]\n\t\t\t\t\t,\t(input[p+3] << 8) | input[p+2]\n\t\t\t\t\t,\t(input[p+5] << 8) | input[p+4]\n\t\t\t\t\t,\t(input[p+7] << 8) | input[p+6]\n\t\t\t\t\t)\n\t\t\t\tthis.v3.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\t\tp += 8\n\t\t\t\tother = UINT64(\n\t\t\t\t\t\t(input[p+1] << 8) | input[p]\n\t\t\t\t\t,\t(input[p+3] << 8) | input[p+2]\n\t\t\t\t\t,\t(input[p+5] << 8) | input[p+4]\n\t\t\t\t\t,\t(input[p+7] << 8) | input[p+6]\n\t\t\t\t\t)\n\t\t\t\tthis.v4.add( other.multiply(PRIME64_2) ).rotl(31).multiply(PRIME64_1);\n\t\t\t}\n\t\t\tp += 8\n\t\t} while (p <= limit)\n\t}\n\n\tif (p < bEnd)\n\t{\n\t\t// XXH64_memcpy(this.memory, p, bEnd-p);\n\t\tif (isString) {\n\t\t\tthis.memory += input.slice(p)\n\t\t} else if (isArrayBuffer) {\n\t\t\tthis.memory.set( input.subarray(p, bEnd), this.memsize )\n\t\t} else {\n\t\t\tinput.copy( this.memory, this.memsize, p, bEnd )\n\t\t}\n\n\t\tthis.memsize = bEnd - p\n\t}\n\n\treturn this\n}\n\n/**\n * Finalize the XXH64 computation. The XXH64 instance is ready for reuse for the given seed\n * @method digest\n * @return {UINT64} xxHash\n */\nXXH64.prototype.digest = function () {\n\tvar input = this.memory\n\tvar isString = typeof input == 'string'\n\tvar p = 0\n\tvar bEnd = this.memsize\n\tvar h64, h\n\tvar u = new UINT64\n\n\tif (this.total_len >= 32)\n\t{\n\t\th64 = this.v1.clone().rotl(1)\n\t\th64.add( this.v2.clone().rotl(7) )\n\t\th64.add( this.v3.clone().rotl(12) )\n\t\th64.add( this.v4.clone().rotl(18) )\n\n\t\th64.xor( this.v1.multiply(PRIME64_2).rotl(31).multiply(PRIME64_1) )\n\t\th64.multiply(PRIME64_1).add(PRIME64_4)\n\n\t\th64.xor( this.v2.multiply(PRIME64_2).rotl(31).multiply(PRIME64_1) )\n\t\th64.multiply(PRIME64_1).add(PRIME64_4)\n\n\t\th64.xor( this.v3.multiply(PRIME64_2).rotl(31).multiply(PRIME64_1) )\n\t\th64.multiply(PRIME64_1).add(PRIME64_4)\n\n\t\th64.xor( this.v4.multiply(PRIME64_2).rotl(31).multiply(PRIME64_1) )\n\t\th64.multiply(PRIME64_1).add(PRIME64_4)\n\t}\n\telse\n\t{\n\t\th64  = this.seed.clone().add( PRIME64_5 )\n\t}\n\n\th64.add( u.fromNumber(this.total_len) )\n\n\twhile (p <= bEnd - 8)\n\t{\n\t\tif (isString) {\n\t\t\tu.fromBits(\n\t\t\t\t(input.charCodeAt(p+1) << 8) | input.charCodeAt(p)\n\t\t\t,\t(input.charCodeAt(p+3) << 8) | input.charCodeAt(p+2)\n\t\t\t,\t(input.charCodeAt(p+5) << 8) | input.charCodeAt(p+4)\n\t\t\t,\t(input.charCodeAt(p+7) << 8) | input.charCodeAt(p+6)\n\t\t\t)\n\t\t} else {\n\t\t\tu.fromBits(\n\t\t\t\t(input[p+1] << 8) | input[p]\n\t\t\t,\t(input[p+3] << 8) | input[p+2]\n\t\t\t,\t(input[p+5] << 8) | input[p+4]\n\t\t\t,\t(input[p+7] << 8) | input[p+6]\n\t\t\t)\n\t\t}\n\t\tu.multiply(PRIME64_2).rotl(31).multiply(PRIME64_1)\n\t\th64\n\t\t\t.xor(u)\n\t\t\t.rotl(27)\n\t\t\t.multiply( PRIME64_1 )\n\t\t\t.add( PRIME64_4 )\n\t\tp += 8\n\t}\n\n\tif (p + 4 <= bEnd) {\n\t\tif (isString) {\n\t\t\tu.fromBits(\n\t\t\t\t(input.charCodeAt(p+1) << 8) | input.charCodeAt(p)\n\t\t\t,\t(input.charCodeAt(p+3) << 8) | input.charCodeAt(p+2)\n\t\t\t,\t0\n\t\t\t,\t0\n\t\t\t)\n\t\t} else {\n\t\t\tu.fromBits(\n\t\t\t\t(input[p+1] << 8) | input[p]\n\t\t\t,\t(input[p+3] << 8) | input[p+2]\n\t\t\t,\t0\n\t\t\t,\t0\n\t\t\t)\n\t\t}\n\t\th64\n\t\t\t.xor( u.multiply(PRIME64_1) )\n\t\t\t.rotl(23)\n\t\t\t.multiply( PRIME64_2 )\n\t\t\t.add( PRIME64_3 )\n\t\tp += 4\n\t}\n\n\twhile (p < bEnd)\n\t{\n\t\tu.fromBits( isString ? input.charCodeAt(p++) : input[p++], 0, 0, 0 )\n\t\th64\n\t\t\t.xor( u.multiply(PRIME64_5) )\n\t\t\t.rotl(11)\n\t\t\t.multiply(PRIME64_1)\n\t}\n\n\th = h64.clone().shiftRight(33)\n\th64.xor(h).multiply(PRIME64_2)\n\n\th = h64.clone().shiftRight(29)\n\th64.xor(h).multiply(PRIME64_3)\n\n\th = h64.clone().shiftRight(32)\n\th64.xor(h)\n\n\t// Reset the state\n\tthis.init( this.seed )\n\n\treturn h64\n}\n\nmodule.exports = XXH64\n", "module.exports = {\n\th32: require(\"./xxhash\")\n,\th64: require(\"./xxhash64\")\n}\n", "\"use strict\";\n\n/*  ------------------------------------------------------------------------ */\n\nconst O = Object\n\n/*  See https://misc.flogisoft.com/bash/tip_colors_and_formatting\n    ------------------------------------------------------------------------ */\n\nconst colorCodes      = [   'black',      'red',      'green',      'yellow',      'blue',      'magenta',      'cyan', 'lightGray', '', 'default']\n    , colorCodesLight = ['darkGray', 'lightRed', 'lightGreen', 'lightYellow', 'lightBlue', 'lightMagenta', 'lightCyan', 'white', '']\n    \n    , styleCodes = ['', 'bright', 'dim', 'italic', 'underline', '', '', 'inverse']\n\n    , asBright = { 'red':       'lightRed',\n                   'green':     'lightGreen',\n                   'yellow':    'lightYellow',\n                   'blue':      'lightBlue',\n                   'magenta':   'lightMagenta',\n                   'cyan':      'lightCyan',\n                   'black':     'darkGray',\n                   'lightGray': 'white' }\n    \n    , types = { 0:  'style',\n                2:  'unstyle',\n                3:  'color',\n                9:  'colorLight',\n                4:  'bgColor',\n                10: 'bgColorLight' }\n\n    , subtypes = {  color:         colorCodes,\n                    colorLight:    colorCodesLight,\n                    bgColor:       colorCodes,\n                    bgColorLight:  colorCodesLight,\n                    style:         styleCodes,\n                    unstyle:       styleCodes    }\n\n/*  ------------------------------------------------------------------------ */\n\nconst clean = obj => {\n                for (const k in obj) { if (!obj[k]) { delete obj[k] } }\n                return (O.keys (obj).length === 0) ? undefined : obj\n            }\n\n/*  ------------------------------------------------------------------------ */\n\nclass Color {\n\n    constructor (background, name, brightness) {\n\n        this.background = background\n        this.name       = name\n        this.brightness = brightness\n    }\n\n    get inverse () {\n        return new Color (!this.background, this.name || (this.background ? 'black' : 'white'), this.brightness)\n    }\n\n    get clean () {\n        return clean ({ name:   this.name === 'default' ? '' : this.name,\n                        bright: this.brightness === Code.bright,\n                        dim:    this.brightness === Code.dim })\n    }\n\n    defaultBrightness (value) {\n\n        return new Color (this.background, this.name, this.brightness || value)\n    }\n\n    css (inverted) {\n\n        const color = inverted ? this.inverse : this\n\n        const rgbName = ((color.brightness === Code.bright) && asBright[color.name]) || color.name\n\n        const prop = (color.background ? 'background:' : 'color:')\n            , rgb  = Colors.rgb[rgbName]\n            , alpha = (this.brightness === Code.dim) ? 0.5 : 1\n\n        return rgb\n                ? (prop + 'rgba(' + [...rgb, alpha].join (',') + ');')\n                : ((!color.background && (alpha < 1)) ? 'color:rgba(0,0,0,0.5);' : '') // Chrome does not support 'opacity' property...\n    }\n}\n\n/*  ------------------------------------------------------------------------ */\n\nclass Code {\n\n    constructor (n) {\n        if (n !== undefined) { this.value = Number (n) } }\n\n    get type () {\n       return types[Math.floor (this.value / 10)] }\n\n    get subtype () {\n        return subtypes[this.type][this.value % 10] }\n\n    get str () {\n        return (this.value ? ('\\u001b\\[' + this.value + 'm') : '') }\n\n    static str (x) {\n        return new Code (x).str }\n\n    get isBrightness () {\n        return (this.value === Code.noBrightness) || (this.value === Code.bright) || (this.value === Code.dim) }\n}\n\n/*  ------------------------------------------------------------------------ */\n\nO.assign (Code, {\n\n    reset:        0,\n    bright:       1,\n    dim:          2,\n    inverse:      7,\n    noBrightness: 22,\n    noItalic:     23,\n    noUnderline:  24,\n    noInverse:    27,\n    noColor:      39,\n    noBgColor:    49\n})\n\n/*  ------------------------------------------------------------------------ */\n\nconst replaceAll = (str, a, b) => str.split (a).join (b)\n\n/*  ANSI brightness codes do not overlap, e.g. \"{bright}{dim}foo\" will be rendered bright (not dim).\n    So we fix it by adding brightness canceling before each brightness code, so the former example gets\n    converted to \"{noBrightness}{bright}{noBrightness}{dim}foo\" \u2013 this way it gets rendered as expected.\n */\n\nconst denormalizeBrightness = s => s.replace (/(\\u001b\\[(1|2)m)/g, '\\u001b[22m$1')\nconst normalizeBrightness = s => s.replace (/\\u001b\\[22m(\\u001b\\[(1|2)m)/g, '$1')\n\nconst wrap = (x, openCode, closeCode) => {\n\n    const open  = Code.str (openCode),\n          close = Code.str (closeCode)\n\n    return String (x)\n                .split ('\\n')\n                .map (line => denormalizeBrightness (open + replaceAll (normalizeBrightness (line), close, open) + close))\n                .join ('\\n')\n}\n\n/*  ------------------------------------------------------------------------ */\n\nconst camel = (a, b) => a + b.charAt (0).toUpperCase () + b.slice (1)\n\n\nconst stringWrappingMethods = (() => [\n\n        ...colorCodes.map ((k, i) => !k ? [] : [ // color methods\n\n            [k,               30 + i, Code.noColor],\n            [camel ('bg', k), 40 + i, Code.noBgColor],\n        ]),\n\n        ...colorCodesLight.map ((k, i) => !k ? [] : [ // light color methods\n            \n            [k,                90 + i, Code.noColor],\n            [camel ('bg', k), 100 + i, Code.noBgColor],\n        ]),\n\n        /* THIS ONE IS FOR BACKWARDS COMPATIBILITY WITH PREVIOUS VERSIONS (had 'bright' instead of 'light' for backgrounds)\n         */\n        ...['', 'BrightRed', 'BrightGreen', 'BrightYellow', 'BrightBlue', 'BrightMagenta', 'BrightCyan'].map ((k, i) => !k ? [] : [\n            \n            ['bg' + k, 100 + i, Code.noBgColor],\n        ]),\n        \n        ...styleCodes.map ((k, i) => !k ? [] : [ // style methods\n\n            [k, i, ((k === 'bright') || (k === 'dim')) ? Code.noBrightness : (20 + i)]\n        ])\n    ]\n    .reduce ((a, b) => a.concat (b))\n    \n) ();\n\n/*  ------------------------------------------------------------------------ */\n\nconst assignStringWrappingAPI = (target, wrapBefore = target) =>\n\n    stringWrappingMethods.reduce ((memo, [k, open, close]) =>\n                                        O.defineProperty (memo, k, {\n                                            get: () => assignStringWrappingAPI (str => wrapBefore (wrap (str, open, close)))\n                                        }),\n\n                                  target)\n\n/*  ------------------------------------------------------------------------ */\n\nconst TEXT    = 0,\n      BRACKET = 1,\n      CODE    = 2\n\nfunction rawParse (s) {\n    \n    let state = TEXT, buffer = '', text = '', code = '', codes = []\n    let spans = []\n\n    for (let i = 0, n = s.length; i < n; i++) {\n\n        const c = s[i]\n\n        buffer += c\n\n        switch (state) {\n\n            case TEXT:\n                if (c === '\\u001b') { state = BRACKET; buffer = c; }\n                else                { text += c }\n                break\n\n            case BRACKET:\n                if (c === '[') { state = CODE; code = ''; codes = [] }\n                else           { state = TEXT; text += buffer }\n                break\n\n            case CODE:\n\n                if ((c >= '0') && (c <= '9')) { code += c }\n                else if (c === ';')           { codes.push (new Code (code)); code = '' }\n                else if ((c === 'm'))         { code = code || '0'\n                                                codes.push (new Code (code))\n                                                for (const code of codes) { spans.push ({ text, code }); text = '' }\n                                                state = TEXT\n                                              }\n                else                          { state = TEXT; text += buffer }\n        }\n    }\n\n    if (state !== TEXT) text += buffer\n\n    if (text) spans.push ({ text, code: new Code () })\n\n    return spans\n}\n\n/*  ------------------------------------------------------------------------ */\n\n/**\n * Represents an ANSI-escaped string.\n */\nclass Colors {\n\n    /**\n     * @param {string} s a string containing ANSI escape codes.\n     */\n    constructor (s) {\n\n        this.spans = s ? rawParse (s) : []\n    }\n\n    get str () {\n        return this.spans.reduce ((str, p) => str + p.text + p.code.str, '')\n    }\n\n    get parsed () {\n\n        let color, bgColor, brightness, styles\n\n        function reset () {\n\n            color      = new Color (),\n            bgColor    = new Color (true /* background */),\n            brightness = undefined,\n            styles     = new Set ()\n        }\n\n        reset ()\n\n        return O.assign (new Colors (), {\n\n            spans: this.spans.map (span => {\n\n                const c = span.code\n\n                const inverted  = styles.has ('inverse'),\n                      underline = styles.has ('underline')   ? 'text-decoration: underline;' : '',                      \n                      italic    = styles.has ('italic')      ? 'font-style: italic;' : '',\n                      bold      = brightness === Code.bright ? 'font-weight: bold;' : ''\n\n                const foreColor = color.defaultBrightness (brightness)\n\n                const styledSpan = O.assign (\n                                        { css: bold + italic + underline + foreColor.css (inverted) + bgColor.css (inverted) },\n                                        clean ({ bold: !!bold, color: foreColor.clean, bgColor: bgColor.clean }),\n                                        span)\n\n                for (const k of styles) { styledSpan[k] = true }\n\n                if (c.isBrightness) {\n\n                    brightness = c.value\n                \n                } else if (span.code.value !== undefined) {\n\n                    if (span.code.value === Code.reset) {\n                        reset ()\n\n                    } else {\n\n                        switch (span.code.type) {\n\n                            case 'color'        :\n                            case 'colorLight'   : color   = new Color (false, c.subtype); break\n\n                            case 'bgColor'      :\n                            case 'bgColorLight' : bgColor = new Color (true,  c.subtype); break\n\n                            case 'style'  : styles.add    (c.subtype); break\n                            case 'unstyle': styles.delete (c.subtype); break\n                        }\n                    }\n                }\n\n                return styledSpan\n\n            }).filter (s => s.text.length > 0)\n        })\n    }\n\n/*  Outputs with Chrome DevTools-compatible format     */\n\n    get asChromeConsoleLogArguments () {\n\n        const spans = this.parsed.spans\n\n        return [spans.map (s => ('%c' + s.text)).join (''),\n             ...spans.map (s => s.css)]\n    }\n\n    get browserConsoleArguments () /* LEGACY, DEPRECATED */ { return this.asChromeConsoleLogArguments }\n\n    /**\n     * @desc installs String prototype extensions\n     * @example\n     * require ('ansicolor').nice\n     * console.log ('foo'.bright.red)\n     */\n    static get nice () {\n\n        Colors.names.forEach (k => {\n            if (!(k in String.prototype)) {\n                O.defineProperty (String.prototype, k, { get: function () { return Colors[k] (this) } })\n            }\n        })\n\n        return Colors\n    }\n\n    /**\n     * @desc parses a string containing ANSI escape codes\n     * @return {Colors} parsed representation.\n     */\n    static parse (s) {\n        return new Colors (s).parsed\n    }\n\n    /**\n     * @desc strips ANSI codes from a string\n     * @param {string} s a string containing ANSI escape codes.\n     * @return {string} clean string.\n     */\n    static strip (s) {\n        return s.replace (/[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-PRZcf-nqry=><]/g, '') // hope V8 caches the regexp\n    }\n\n    /**\n     * @example\n     * const spans = [...ansi.parse ('\\u001b[7m\\u001b[7mfoo\\u001b[7mbar\\u001b[27m')]\n     */\n    [Symbol.iterator] () {\n        return this.spans[Symbol.iterator] ()\n    }\n\n    /**\n     * @desc This allows an alternative import style, see https://github.com/xpl/ansicolor/issues/7#issuecomment-578923578\n     * @example\n     * import { ansicolor, ParsedSpan } from 'ansicolor'\n     */\n    static get ansicolor () {\n        return Colors\n    }\n}\n\n/*  ------------------------------------------------------------------------ */\n\nassignStringWrappingAPI (Colors, str => str)\n\n/*  ------------------------------------------------------------------------ */\n\nColors.names = stringWrappingMethods.map (([k]) => k)\n\n/*  ------------------------------------------------------------------------ */\n\nColors.rgb = {\n\n    black:        [0,     0,   0],    \n    darkGray:     [100, 100, 100],\n    lightGray:    [200, 200, 200],\n    white:        [255, 255, 255],\n\n    red:          [204,   0,   0],\n    lightRed:     [255,  51,   0],\n    \n    green:        [0,   204,   0],\n    lightGreen:   [51,  204,  51],\n    \n    yellow:       [204, 102,   0],\n    lightYellow:  [255, 153,  51],\n    \n    blue:         [0,     0, 255],\n    lightBlue:    [26,  140, 255],\n    \n    magenta:      [204,   0, 204],\n    lightMagenta: [255,   0, 255],\n    \n    cyan:         [0,   153, 255],\n    lightCyan:    [0,   204, 255],\n}\n\n/*  ------------------------------------------------------------------------ */\n\nmodule.exports = Colors\n\n/*  ------------------------------------------------------------------------ */\n\n", "// @ts-ignore\nimport { version } from '../package.json';\n\nimport {\n  LoggerTransportNameEnum,\n  LogLevelsEnum,\n  TransportInstances,\n  LoggerTransportOptions,\n  LoggerTransportOptionsByLevel,\n  LoggerTransportResult,\n  LoggerBroadcastFns,\n  AppIdentifiers,\n} from './interfaces';\n\nimport { LoggerTransport } from './transports/base';\nimport ConsoleTransport from './transports/console';\nimport UndefinedTransport from './transports/undefined';\n\nexport * from './interfaces';\n\nexport { LoggerTransport } from './transports/base';\n\nexport const LoggerTransportName = {...LoggerTransportNameEnum};\nexport const LogLevels = {...LogLevelsEnum};\n\nexport interface LoggerTransportClasses {\n  [LoggerTransportName.CONSOLE]: typeof LoggerTransport;\n  [LoggerTransportName.SLACK]?: typeof LoggerTransport;\n  [LoggerTransportName.DISCORD]?: typeof LoggerTransport;\n  [LoggerTransportName.EMAIL]?: typeof LoggerTransport;\n  [LoggerTransportName.SMS]?: typeof LoggerTransport;\n  [LoggerTransportName.SOCKET]?: typeof LoggerTransport;\n  [k: string]: typeof LoggerTransport | undefined;\n}\n\nconst LOG_LEVELS = {\n  debug: 0,\n  info: 10,\n  warn: 20,\n  error: 30,\n  fatal: 40,\n  all: 100,\n};\n\nexport interface LoggerOptions {\n  optionsByLevel?: LoggerTransportOptionsByLevel;\n  transports?: Partial<LoggerTransportClasses>;\n  singleton?: boolean;\n  logLevel?: keyof typeof LOG_LEVELS;\n  catchTransportErrors?: boolean;\n  fallbackTransport?: typeof LoggerTransport;\n  appIdentifiers?: AppIdentifiers;\n}\n\nconst defaultLoggerTransportOptions: LoggerTransportOptions = {\n  transport: LoggerTransportName.CONSOLE,\n  options: {\n    destination: LoggerTransportName.CONSOLE,\n    channelName: LoggerTransportName.CONSOLE,\n  },\n};\n\nconst defaultOptionsByLevel: LoggerTransportOptionsByLevel = {\n  debug: [defaultLoggerTransportOptions],\n  info: [defaultLoggerTransportOptions],\n  warn: [defaultLoggerTransportOptions],\n  error: [defaultLoggerTransportOptions],\n  fatal: [defaultLoggerTransportOptions],\n  all: [defaultLoggerTransportOptions],\n};\n\nconst initialTransportInstances: TransportInstances = {\n  debug: [],\n  info: [],\n  warn: [],\n  error: [],\n  fatal: [],\n  all: [],\n};\n\nconst defaultTransports = {\n  [LoggerTransportName.CONSOLE]: ConsoleTransport,\n  [LoggerTransportName.SLACK]: UndefinedTransport,\n  [LoggerTransportName.DISCORD]: UndefinedTransport,\n  [LoggerTransportName.EMAIL]: UndefinedTransport,\n  [LoggerTransportName.SMS]: UndefinedTransport,\n  [LoggerTransportName.SOCKET]: UndefinedTransport,\n};\n\n/**\n * The `Logger` class does the heavy-lifting of keeping track of transports,\n * broadcasting to the appropriate transports (or not) based on the log levels,\n * and aggregating the results from said broadcasts.\n */\nexport default class Logger {\n  private static instance: Logger;\n\n  static version: string = version;\n  static LoggerTransportName = LoggerTransportName;\n  static LogLevels = LogLevels;\n  static LoggerTransport = LoggerTransport;\n\n  optionsByLevel: LoggerTransportOptionsByLevel;\n  availableTransports: LoggerTransportClasses;\n  transportInstances: TransportInstances = JSON.parse(\n    JSON.stringify(initialTransportInstances)\n  );\n  appIdentifiers: AppIdentifiers = {};\n\n  catchTransportErrors: boolean = false;\n  readonly fallbackTransport: undefined | LoggerTransport;\n\n  private appIdString(): string {\n    const {\n      region,\n      clusterType,\n      cluster,\n      hostname,\n      ip,\n      app,\n    } = this.appIdentifiers;\n\n    const result = [\n      region,\n      clusterType,\n      cluster,\n      hostname,\n      ip,\n      app\n    ].filter(\n      (i) => i\n    ).join(' > ');\n\n    return (result) ? `[${result}]` : '';\n  }\n\n  constructor({\n    optionsByLevel,\n    transports,\n    singleton = true,\n    logLevel,\n    catchTransportErrors,\n    fallbackTransport,\n    appIdentifiers,\n  }: LoggerOptions) {\n    this.optionsByLevel = { ...defaultOptionsByLevel, ...optionsByLevel };\n    this.availableTransports = {...defaultTransports, ...transports};\n    this.appIdentifiers = appIdentifiers || {};\n\n    const {\n      LOG_LEVEL,\n      LOGGER_CATCH_TRANSPORT_ERRORS,\n    } = process.env;\n\n    this.catchTransportErrors = (\n      (LOGGER_CATCH_TRANSPORT_ERRORS || '').toLowerCase() === 'true'\n    ) || catchTransportErrors || this.catchTransportErrors;\n\n    if (singleton && Logger.instance) return Logger.instance;\n\n    if (singleton && !Logger.instance) Logger.instance = this;\n\n    if (this.catchTransportErrors) {\n      if (fallbackTransport) {\n        this.fallbackTransport = new fallbackTransport({\n          destination: `Logger:Fallback(${fallbackTransport.name})`\n        });\n      } else {\n        this.fallbackTransport = new ConsoleTransport({destination: 'Logger:Fallback'});\n      }\n    }\n\n    const envLogLevel = LOG_LEVELS[LOG_LEVEL as keyof typeof LOG_LEVELS];\n\n    const destinations: string[] = [];\n    const transportInstanceMap: {[k: string]: LoggerTransport} = {};\n\n    /**\n     * To save on resources, register singleton transports only for the log levels\n     * above or equal the configured log level\n     */\n    Object.entries(LOG_LEVELS).forEach(([k, v]) => {this.broadcast\n      if (\n        v >= (\n          envLogLevel // This is our environment variable override feature\n          || (\n            (\n              logLevel\n            ) ? (\n              LOG_LEVELS[logLevel as keyof typeof LOG_LEVELS]\n            ) : (\n              LOG_LEVELS[LogLevels.DEBUG]\n            )\n          )\n        ) || k === LogLevels.ALL\n      ) {\n        let lvlOptions = this.optionsByLevel[k as keyof LoggerTransportOptionsByLevel];\n\n        if (lvlOptions.length === 0) {\n          lvlOptions = defaultOptionsByLevel[k as keyof LoggerTransportOptionsByLevel];\n        }\n\n        lvlOptions.forEach(({transport, options}) => {\n          const {destination} = options;\n          const TransportClass = this.availableTransports[transport as LoggerTransportNameEnum]\n              || UndefinedTransport;\n\n          if (!destinations.includes(destination)) {\n            destinations.push(destination);\n\n            transportInstanceMap[destination] = new TransportClass({\n              name: transport,\n              ...options,\n            });\n          }\n\n          this.transportInstances[k as keyof TransportInstances].push(\n            transportInstanceMap[destination]\n          );\n        });\n      }\n    });\n  }\n\n  debug(...message: unknown[]) {\n    return this.broadcast(message, LogLevels.DEBUG);\n  }\n\n  info(...message: unknown[]) {\n    return this.broadcast(message, LogLevels.INFO);\n  }\n\n  warn(...message: unknown[]) {\n    return this.broadcast(message, LogLevels.WARN);\n  }\n\n  error(...message: unknown[]) {\n    return this.broadcast(message, LogLevels.ERROR);\n  }\n\n  fatal(...message: unknown[]) {\n    return this.broadcast(message, LogLevels.FATAL);\n  }\n\n  all(...message: unknown[]) {\n    return this.broadcast(message, LogLevels.ALL);\n  }\n\n  channel(channelName: string): LoggerBroadcastFns {\n    return {\n      [LogLevels.DEBUG]: async (...message: unknown[]) => {\n        return this.broadcast(message, LogLevels.DEBUG, channelName)\n      },\n      [LogLevels.INFO]: async (...message: unknown[]) => {\n        return this.broadcast(message, LogLevels.INFO, channelName)\n      },\n      [LogLevels.WARN]: async (...message: unknown[]) => {\n        return this.broadcast(message, LogLevels.WARN, channelName)\n      },\n      [LogLevels.ERROR]: async (...message: unknown[]) => {\n        return this.broadcast(message, LogLevels.ERROR, channelName)\n      },\n      [LogLevels.FATAL]: async (...message: unknown[]) => {\n        return this.broadcast(message, LogLevels.FATAL, channelName)\n      },\n      [LogLevels.ALL]: async (...message: unknown[]) => {\n        return this.broadcast(message, LogLevels.ALL, channelName)\n      },\n    };\n  }\n\n  async broadcast(\n    message: unknown[],\n    level: LogLevelsEnum,\n    channelName: string = '-',\n  ): Promise<LoggerTransportResult[]> {\n    const results: Promise<LoggerTransportResult>[] = [];\n\n    await this.transportInstances[level as keyof TransportInstances].reduce(\n      async (a, transport) => {\n        await a;\n\n        if (channelName === '-' || transport.channelName === channelName) {\n          const result = transport[level as LogLevelsEnum](\n            [\n              [\n                this.appIdString(),\n                `[${new Date().toISOString()}]`,\n              ].join(' '),\n              ...message,\n            ].filter((m) => m)\n          ).catch((e) => {\n            if (!this.catchTransportErrors) {\n              throw e;\n            };\n\n            const fallbackResult = (this.fallbackTransport as LoggerTransport).error(\n              [\n                [\n                  this.appIdString(),\n                  `[${new Date().toISOString()}]`,\n                ].join(' '),\n                e,\n              ]\n            ).then((r) => ({\n              ...(e.transportResult || {}),\n              ...r,\n            }));\n\n            return fallbackResult;\n          });\n\n          results.push(result);\n\n          return result;\n        }\n\n        return Promise.resolve();\n      },\n      Promise.resolve() as Promise<void | LoggerTransportResult>\n    );\n\n    return await Promise.all(results);\n  }\n}\n", "export enum LogLevelsEnum {\n  DEBUG = 'debug',\n  INFO = 'info',\n  WARN = 'warn',\n  ERROR = 'error',\n  FATAL = 'fatal',\n  ALL = 'all',\n}\n\n// These are our MVP but should be extended to be kept up to date as we officially\n// adopt more transports from the Open Source community\nexport enum LoggerTransportNameEnum {\n  CONSOLE = 'console',\n  SLACK = 'slack',\n  DISCORD = 'discord',\n  EMAIL = 'email',\n  SMS = 'sms',\n  SOCKET = 'socket',\n}\n\nexport type LoggerTransportResult = {\n  destination?: string,\n  channelName?: string,\n  result?: unknown; // Better to leave this one up to our transport contributors\n  error?: any;\n}\n\nexport type LoggerTransportFns = {\n  [LogLevelsEnum.DEBUG]: (...message: unknown[]) => Promise<LoggerTransportResult>;\n  [LogLevelsEnum.INFO]: (...message: unknown[]) => Promise<LoggerTransportResult>;\n  [LogLevelsEnum.WARN]: (...message: unknown[]) => Promise<LoggerTransportResult>;\n  [LogLevelsEnum.ERROR]: (...message: unknown[]) => Promise<LoggerTransportResult>;\n  [LogLevelsEnum.FATAL]: (...message: unknown[]) => Promise<LoggerTransportResult>;\n  [LogLevelsEnum.ALL]: (...message: unknown[]) => Promise<LoggerTransportResult>;\n}\n\nexport interface ILoggerTransport extends LoggerTransportFns {\n  readonly _id: string;\n  readonly _r: string;\n  readonly _isBrowser: boolean | '' | undefined;\n  readonly channelName: string;\n}\n\nexport type LoggerBroadcastFns = {\n  [LogLevelsEnum.DEBUG]: (...message: unknown[]) => Promise<LoggerTransportResult[]>;\n  [LogLevelsEnum.INFO]: (...message: unknown[]) => Promise<LoggerTransportResult[]>;\n  [LogLevelsEnum.WARN]: (...message: unknown[]) => Promise<LoggerTransportResult[]>;\n  [LogLevelsEnum.ERROR]: (...message: unknown[]) => Promise<LoggerTransportResult[]>;\n  [LogLevelsEnum.FATAL]: (...message: unknown[]) => Promise<LoggerTransportResult[]>;\n  [LogLevelsEnum.ALL]: (...message: unknown[]) => Promise<LoggerTransportResult[]>;\n}\n\nexport type TransportInstances = {\n  [k in LogLevelsEnum]: ILoggerTransport[];\n}\n\nexport interface LoggerTransportOptions<\n  T extends {\n    destination: string,\n    channelName?: string,\n    name?: string;\n  } = {\n    destination: string,\n    channelName?: string,\n    name?: string;\n  }\n> {\n  transport: LoggerTransportNameEnum | string;\n  options: T;\n}\n\nexport type LoggerTransportOptionsByLevel = {\n  [k in LogLevelsEnum]: LoggerTransportOptions[];\n}\n\nexport interface AppIdentifiers {\n  region?: string;\n  clusterType?: string;\n  cluster?: string;\n  hostname?: string;\n  ip?: string;\n  app?: string;\n}\n", "import { serializeError } from 'serialize-error';\nimport XXH from 'xxhashjs';\n\nimport { ILoggerTransport, LoggerTransportOptions } from '../interfaces';\n\nconst stringify = (obj: unknown): string => {\n  let cache: unknown[] = [];\n\n  const result = (typeof obj === 'string') ? obj : JSON.stringify(\n    obj,\n    (_key, value) => {\n      if (value instanceof Error) return serializeError(value);\n\n      if (typeof value === 'object' && value !== null) {\n        // Duplicate reference found, discard key\n        if (cache.includes(value)) return undefined;\n\n        // Store value in our collection\n        cache.push(value);\n      }\n      return value;\n    },\n    2,\n  );\n\n  cache = [];\n\n  return result;\n};\n\nexport class LoggerTransport implements ILoggerTransport {\n  static instances: { [k: string]: LoggerTransport } = {};\n\n  readonly _id: string;\n\n  readonly _r: string;\n\n  readonly _isBrowser: boolean | '' | undefined;\n\n  readonly channelName: string;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async debug(..._message: unknown[]) { return {}; }\n\n  async info(..._message: unknown[]) { return {}; }\n\n  async warn(..._message: unknown[]) { return {}; }\n\n  async error(..._message: unknown[]) { return {}; }\n\n  async fatal(..._message: unknown[]) { return {}; }\n\n  async all(..._message: unknown[]) { return {}; }\n\n  format(message: unknown[]): string {\n    return message.map(stringify).join(' ').replace(/\\n (\\S)/g, '\\n$1');\n  }\n\n  constructor({ r, destination, channelName }: (LoggerTransportOptions['options'] & {r?: string})) {\n    this._id = XXH.h32(destination, 0xabcd).toString(16);\n    this._r = r as string;\n    this._isBrowser = process.env.IS_BROWSER && process.env.IS_BROWSER === 'TRUE';\n    this.channelName = channelName || '-';\n\n    if (LoggerTransport.instances[this._id]) {\n      return LoggerTransport.instances[this._id];\n    }\n\n    LoggerTransport.instances[this._id] = this;\n  }\n}\n\nexport type LoggingFunctions = keyof LoggerTransport;\n", "import Colors from './ansicolor.js'\n\n/* Regenerate in Repl:\n  const Colors = require('ansicolor')\n  const reserved = [...Object.getOwnPropertyNames(Object), 'default']\n  const filtered = Object.getOwnPropertyNames(Colors).filter(k => !reserved.includes(k) )\n  filtered.forEach(k => console.log(`export const ${k} = Colors.${k}`))\n  console.log('export default Colors')\n\n*/\n\nexport const nice = Colors.nice\nexport const parse = Colors.parse\nexport const strip = Colors.strip\nexport const ansicolor = Colors.ansicolor\nexport const black = Colors.black\nexport const bgBlack = Colors.bgBlack\nexport const red = Colors.red\nexport const bgRed = Colors.bgRed\nexport const green = Colors.green\nexport const bgGreen = Colors.bgGreen\nexport const yellow = Colors.yellow\nexport const bgYellow = Colors.bgYellow\nexport const blue = Colors.blue\nexport const bgBlue = Colors.bgBlue\nexport const magenta = Colors.magenta\nexport const bgMagenta = Colors.bgMagenta\nexport const cyan = Colors.cyan\nexport const bgCyan = Colors.bgCyan\nexport const lightGray = Colors.lightGray\nexport const bgLightGray = Colors.bgLightGray\nexport const bgDefault = Colors.bgDefault\nexport const darkGray = Colors.darkGray\nexport const bgDarkGray = Colors.bgDarkGray\nexport const lightRed = Colors.lightRed\nexport const bgLightRed = Colors.bgLightRed\nexport const lightGreen = Colors.lightGreen\nexport const bgLightGreen = Colors.bgLightGreen\nexport const lightYellow = Colors.lightYellow\nexport const bgLightYellow = Colors.bgLightYellow\nexport const lightBlue = Colors.lightBlue\nexport const bgLightBlue = Colors.bgLightBlue\nexport const lightMagenta = Colors.lightMagenta\nexport const bgLightMagenta = Colors.bgLightMagenta\nexport const lightCyan = Colors.lightCyan\nexport const bgLightCyan = Colors.bgLightCyan\nexport const white = Colors.white\nexport const bgWhite = Colors.bgWhite\nexport const bgBrightRed = Colors.bgBrightRed\nexport const bgBrightGreen = Colors.bgBrightGreen\nexport const bgBrightYellow = Colors.bgBrightYellow\nexport const bgBrightBlue = Colors.bgBrightBlue\nexport const bgBrightMagenta = Colors.bgBrightMagenta\nexport const bgBrightCyan = Colors.bgBrightCyan\nexport const bright = Colors.bright\nexport const dim = Colors.dim\nexport const italic = Colors.italic\nexport const underline = Colors.underline\nexport const inverse = Colors.inverse\nexport const names = Colors.names\nexport const rgb = Colors.rgb\n\nexport default Colors\n", "/* eslint-disable no-console */\nimport {\n  yellow,\n  green,\n  red,\n  bgRed,\n  lightCyan,\n  lightMagenta,\n  parse,\n} from 'ansicolor';\n\nimport { LoggerTransportOptions, LogLevelsEnum } from '../interfaces';\nimport { LoggerTransport } from './base';\n\nconst LogLevels = {...LogLevelsEnum};\n\nexport default class ConsoleTransport extends LoggerTransport {\n  readonly destination: string;\n\n  constructor(options: LoggerTransportOptions['options']) {\n    const r = Math.random().toString(36).substring(7);\n    super({...options, r});\n\n    this.destination = options.destination;\n\n    if (r !== this._r) {\n      return this;\n    }\n  }\n\n  async debug([timestamp, ...message]: unknown[]) {\n    console.log(...this.recolor(lightMagenta(this.format(\n      [\n        timestamp,\n        LogLevels.DEBUG.toUpperCase(),\n        '\uD83D\uDC1E\uFE0F:\\n\\n',\n        ...message,\n        '\\n',\n      ]\n    ).replace(/\\n/g, '\\n\\t'))));\n\n    return {\n      destination: this.destination,\n      channelName: this.channelName,\n      result: true,\n    };\n  }\n\n  async info([timestamp, ...message]: unknown[]) {\n    console.log(...this.recolor(green(this.format(\n      [\n        timestamp,\n        LogLevels.INFO.toUpperCase(),\n        '\u2705\uFE0F:\\n\\n',\n        ...message,\n        '\\n',\n      ]\n    ).replace(/\\n/g, '\\n\\t'))));\n\n    return {\n      destination: this.destination,\n      channelName: this.channelName,\n      result: true,\n    };\n  }\n\n  async warn([timestamp, ...message]: unknown[]) {\n    console.log(...this.recolor(yellow(this.format(\n      [\n        timestamp,\n        LogLevels.WARN.toUpperCase(),\n        '\uD83D\uDFE1:\\n\\n',\n        ...message,\n        '\\n',\n      ]\n    ).replace(/\\n/g, '\\n\\t'))));\n\n    return {\n      destination: this.destination,\n      channelName: this.channelName,\n      result: true,\n    };\n  }\n\n  async error([timestamp, ...message]: unknown[]) {\n    console.log(...this.recolor(red(this.format(\n      [\n        timestamp,\n        LogLevels.ERROR.toUpperCase(),\n        '\uD83D\uDEA8\uFE0F:\\n\\n',\n        ...message,\n        '\\n',\n      ]\n    ).replace(/\\n/g, '\\n\\t'))));\n\n    return {\n      destination: this.destination,\n      channelName: this.channelName,\n      result: true,\n    };\n  }\n\n  async fatal([timestamp, ...message]: unknown[]) {\n    console.log(...this.recolor(bgRed(this.format(\n      [\n        timestamp,\n        LogLevels.FATAL.toUpperCase(),\n        '\uD83D\uDC80:\\n\\n',\n        ...message,\n        '\\n',\n      ]\n    ).replace(/\\n/g, '\\n\\t'))));\n\n    return {\n      destination: this.destination,\n      channelName: this.channelName,\n      result: true,\n    };\n  }\n\n  async all([timestamp, ...message]: unknown[]) {\n    console.log(...this.recolor(lightCyan(this.format(\n      [\n        timestamp,\n        LogLevels.ALL.toUpperCase(),\n        '\uD83D\uDCDD:\\n\\n',\n        ...message,\n        '\\n',\n      ]\n    ).replace(/\\n/g, '\\n\\t'))));\n\n    return {\n      destination: this.destination,\n      channelName: this.channelName,\n      result: true,\n    };\n  }\n\n  recolor(formattedMessage: string) {\n    if (this._isBrowser) {\n      return parse(formattedMessage).asChromeConsoleLogArguments;\n    }\n\n    return [formattedMessage];\n  }\n}\n", "/* eslint-disable no-console */\nimport {\n  yellow,\n  parse,\n} from 'ansicolor';\n\nimport { LoggerTransportOptions, LoggerTransportResult } from '../interfaces';\nimport { LoggerTransport } from './base';\n\nclass UndefinedTransportError extends Error {\n  transportResult: LoggerTransportResult;\n\n  constructor(message: string, transportResult: LoggerTransportResult) {\n    super(message);\n\n    this.transportResult = transportResult;\n  };\n}\n\nexport const errorString = `LOGGER ERROR: transport \"TRANSPORT_NAME\" is NOT available, it was not defined in the logger options!`;\n\nexport default class UndefinedTransport extends LoggerTransport {\n  readonly transportName: undefined | string;\n  readonly destination: string;\n\n  constructor(options: LoggerTransportOptions['options']) {\n    const r = Math.random().toString(36).substring(7);\n    super({...options, r});\n\n    console.log(\n      ...this.recolor(yellow(new Date().toISOString())),\n      ...this.recolor(yellow(`WARN \uD83D\uDFE1:\\n\\n\\tLogger transport \"${options.name}\" is NOT defined!\\n`)),\n    );\n\n    this.destination = options.destination;\n    this.transportName = options.name;\n  }\n\n  async debug(message: unknown[]) {\n    this.throwDefault();\n    return {};\n  }\n\n  async info(message: unknown[]) {\n    this.throwDefault();\n    return {};\n  }\n\n  async warn(message: unknown[]) {\n    this.throwDefault();\n    return {};\n  }\n\n  async error(message: unknown[]) {\n    this.throwDefault();\n    return {};\n  }\n\n  async fatal(message: unknown[]) {\n    this.throwDefault();\n    return {};\n  }\n\n  async all(message: unknown[]) {\n    this.throwDefault();\n    return {};\n  }\n\n  throwDefault() {\n    const errorMessage = errorString.replace('TRANSPORT_NAME', this.transportName || 'undefined');\n    const error = new UndefinedTransportError(\n      errorMessage,\n      {\n        destination: this.destination,\n        channelName: this.channelName,\n        error: new Error(errorMessage),\n      },\n    );\n\n    throw error;\n  }\n\n  recolor(formattedMessage: string) {\n    if (this._isBrowser) {\n      return parse(formattedMessage).asChromeConsoleLogArguments;\n    }\n\n    return [formattedMessage];\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
